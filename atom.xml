<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>阿王</title>
  
  <subtitle>做一个爱折腾的程序员</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/wangjinshen/"/>
  <updated>2019-01-22T11:40:26.467Z</updated>
  <id>https://github.com/wangjinshen/</id>
  
  <author>
    <name>王瑾深</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>seo工具</title>
    <link href="https://github.com/wangjinshen/2019/01/22/seo%E5%B7%A5%E5%85%B7/"/>
    <id>https://github.com/wangjinshen/2019/01/22/seo工具/</id>
    <published>2019-01-22T11:06:55.000Z</published>
    <updated>2019-01-22T11:40:26.467Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SEO-工具"><a href="#SEO-工具" class="headerlink" title="SEO 工具"></a>SEO 工具</h1><h2 id="最我网"><a href="#最我网" class="headerlink" title="最我网"></a>最我网</h2><p>网址: <a href="http://www.zui5.com" target="_blank" rel="noopener">http://www.zui5.com</a></p><h2 id="包含工具"><a href="#包含工具" class="headerlink" title="包含工具"></a>包含工具</h2><ul><li>Alexa</li><li>SEO外链代发工具</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;SEO-工具&quot;&gt;&lt;a href=&quot;#SEO-工具&quot; class=&quot;headerlink&quot; title=&quot;SEO 工具&quot;&gt;&lt;/a&gt;SEO 工具&lt;/h1&gt;&lt;h2 id=&quot;最我网&quot;&gt;&lt;a href=&quot;#最我网&quot; class=&quot;headerlink&quot; title=&quot;最我网
      
    
    </summary>
    
    
      <category term="seo" scheme="https://github.com/wangjinshen/tags/seo/"/>
    
  </entry>
  
  <entry>
    <title>拖动 -position</title>
    <link href="https://github.com/wangjinshen/2019/01/22/%E6%8B%96%E5%8A%A8-position/"/>
    <id>https://github.com/wangjinshen/2019/01/22/拖动-position/</id>
    <published>2019-01-22T08:15:31.000Z</published>
    <updated>2019-01-22T11:06:20.367Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于一些拖动的小-demo"><a href="#关于一些拖动的小-demo" class="headerlink" title="关于一些拖动的小 demo"></a>关于一些拖动的小 demo</h1><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><h3 id="先上-demo"><a href="#先上-demo" class="headerlink" title="先上 demo"></a>先上 demo</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/style.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        .box &#123;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">            background: red;</span></span><br><span class="line"><span class="undefined">            position: fixed;</span></span><br><span class="line"><span class="undefined">            position: relative;</span></span><br><span class="line"><span class="undefined">            top: 20px;</span></span><br><span class="line"><span class="undefined">            left: 20px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        .rightBottom,</span></span><br><span class="line"><span class="undefined">        .left &#123;</span></span><br><span class="line"><span class="undefined">            width: 20px;</span></span><br><span class="line"><span class="undefined">            height: 20px;</span></span><br><span class="line"><span class="undefined">            background: rgba(89, 98, 89, .8);</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="undefined">            top: 50%;</span></span><br><span class="line"><span class="undefined">            right: 0;</span></span><br><span class="line"><span class="undefined">            transform: translate(50%, -50%);</span></span><br><span class="line"><span class="undefined">            border-radius: 50%;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        .rightBottom &#123;</span></span><br><span class="line"><span class="undefined">            top: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"rightBottom"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">dom</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="built_in">document</span>.querySelector(dom);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">".box"</span>).onmousedown = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined">            e.stopPropagation();</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> X = e.offsetX,</span></span><br><span class="line"><span class="undefined">                Y = e.offsetY</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                e.target.style.left = e.pageX - X + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="javascript">                e.target.style.top = e.pageY - Y + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmousemove = <span class="literal">null</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">".left"</span>).onmousedown = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined">            e.preventDefault();</span></span><br><span class="line"><span class="undefined">            e.stopPropagation();</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> originX = e.pageX,</span></span><br><span class="line"><span class="javascript">                width = $(<span class="string">".box"</span>).offsetWidth;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".box"</span>).style.width = width + e.pageX - originX + <span class="string">"px"</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmousemove = <span class="literal">null</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">".rightBottom"</span>).onmousedown = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined">            e.stopPropagation();</span></span><br><span class="line"><span class="undefined">            e.preventDefault();</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> originX = e.pageX,</span></span><br><span class="line"><span class="undefined">                originY = e.pageY,</span></span><br><span class="line"><span class="javascript">                width = $(<span class="string">".box"</span>).offsetWidth,</span></span><br><span class="line"><span class="javascript">                height = $(<span class="string">".box"</span>).offsetHeight;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".box"</span>).style.width = width + e.pageX - originX + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".box"</span>).style.height = height + e.pageY - originY + <span class="string">"px"</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmousemove = <span class="literal">null</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="通过事件拿到位置信息的-API"><a href="#通过事件拿到位置信息的-API" class="headerlink" title="通过事件拿到位置信息的 API"></a>通过事件拿到位置信息的 API</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".box"</span>).onmousedown = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e)</span><br><span class="line">    <span class="comment">//clientX: 128</span></span><br><span class="line">    <span class="comment">//clientY: 87</span></span><br><span class="line">    <span class="comment">//点击的点相对view视口原点的距离</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// offsetX: 108</span></span><br><span class="line">   <span class="comment">// offsetY: 67</span></span><br><span class="line">   <span class="comment">//点击的点相对自身原点的距离</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// pageX: 128</span></span><br><span class="line">   <span class="comment">// pageY: 87</span></span><br><span class="line">   <span class="comment">//点击的点相对document原点的距离</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// screenX: 348</span></span><br><span class="line">   <span class="comment">// screenY: 400</span></span><br><span class="line">   <span class="comment">//点击的点相对屏幕原点的距离</span></span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="拖动-dom"><a href="#拖动-dom" class="headerlink" title="拖动 dom"></a>拖动 dom</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".box"</span>).onmousedown = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(e)</span><br><span class="line">           e.stopPropagation();</span><br><span class="line">           <span class="keyword">let</span> X = e.offsetX,</span><br><span class="line">               Y = e.offsetY</span><br><span class="line">           <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">               e.target.style.left = e.pageX - X + <span class="string">"px"</span>;</span><br><span class="line">               e.target.style.top = e.pageY - Y + <span class="string">"px"</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="built_in">document</span>.onmousemove = <span class="literal">null</span></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="通过拖动改变-dom-宽度"><a href="#通过拖动改变-dom-宽度" class="headerlink" title="通过拖动改变 dom 宽度"></a>通过拖动改变 dom 宽度</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".left"</span>).onmousedown = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">       e.preventDefault();</span><br><span class="line">       e.stopPropagation();</span><br><span class="line">       <span class="keyword">let</span> originX = e.pageX,</span><br><span class="line">           width = $(<span class="string">".box"</span>).offsetWidth;</span><br><span class="line">       <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">           $(<span class="string">".box"</span>).style.width = width + e.pageX - originX + <span class="string">"px"</span></span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       <span class="built_in">document</span>.onmousemove = <span class="literal">null</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="通过拖动改变-dom-宽度和高度"><a href="#通过拖动改变-dom-宽度和高度" class="headerlink" title="通过拖动改变 dom 宽度和高度"></a>通过拖动改变 dom 宽度和高度</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".rightBottom"</span>).onmousedown = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">           <span class="comment">//阻止冒泡</span></span><br><span class="line">           e.stopPropagation();</span><br><span class="line">           <span class="comment">//取消默认事件</span></span><br><span class="line">           e.preventDefault();</span><br><span class="line">           <span class="comment">//按下时获取到当前点击的原点</span></span><br><span class="line">           <span class="keyword">let</span> originX = e.pageX,</span><br><span class="line">               originY = e.pageY,</span><br><span class="line">               <span class="comment">//按下时获取到当前元素的宽度和高度</span></span><br><span class="line">               width = $(<span class="string">".box"</span>).offsetWidth,</span><br><span class="line">               height = $(<span class="string">".box"</span>).offsetHeight;</span><br><span class="line">           <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">               <span class="comment">//e.pageX - originX</span></span><br><span class="line">               <span class="comment">// 移动时鼠标的距离原点的距离减去按下时原点的距离==要加的宽度或要减得宽度</span></span><br><span class="line">               $(<span class="string">".box"</span>).style.width = width + e.pageX - originX + <span class="string">"px"</span>;</span><br><span class="line">               $(<span class="string">".box"</span>).style.height = height + e.pageY - originY + <span class="string">"px"</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="comment">//抬起取消移动事件</span></span><br><span class="line">           <span class="built_in">document</span>.onmousemove = <span class="literal">null</span></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="元素距离的一些获取方式"><a href="#元素距离的一些获取方式" class="headerlink" title="元素距离的一些获取方式"></a>元素距离的一些获取方式</h2><ul><li>$(“.box”).clientWidth;</li><li>$(“.box”).clientHeight;</li><li>$(“.box”).offsetWidth   （包含边线的宽）</li><li>$(“.box”).offsetHeight （包含边线的高）;</li><li>$(“.box”).offsetLeft (dom 元素距离定位元素的 left 父元素没有定位层层向上直到 document)</li><li>$(“.box”).offsetTop (dom 元素距离定位元素的 Top 父元素没有定位层层向上直到 document)</li><li>$(“.box”) 正文全文宽：  $(“.box”).scrollWidth;（含滚动条时，即滚动条从最顶端滚到最底端实际走过的距离）</li><li>$(“.box”) 正文全文高：  $(“.box”).scrollHeight;（含滚动条时，即滚动条从最顶端滚到最底端实际走过的距离）</li><li>$(“.box”) 被卷去的高：  $(“.box”).scrollTop;</li><li>$(“.box”) 被卷去的左：  $(“.box”).scrollLeft;</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;关于一些拖动的小-demo&quot;&gt;&lt;a href=&quot;#关于一些拖动的小-demo&quot; class=&quot;headerlink&quot; title=&quot;关于一些拖动的小 demo&quot;&gt;&lt;/a&gt;关于一些拖动的小 demo&lt;/h1&gt;&lt;h2 id=&quot;demo&quot;&gt;&lt;a href=&quot;#demo&quot;
      
    
    </summary>
    
    
      <category term="dom" scheme="https://github.com/wangjinshen/tags/dom/"/>
    
      <category term="position" scheme="https://github.com/wangjinshen/tags/position/"/>
    
  </entry>
  
  <entry>
    <title>react对象控制台输出 null 的问题</title>
    <link href="https://github.com/wangjinshen/2019/01/20/react%E5%90%88%E6%88%90%E4%BA%8B%E4%BB%B6%E5%AF%B9%E8%B1%A1%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BAnull%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://github.com/wangjinshen/2019/01/20/react合成事件对象控制台输出null的问题/</id>
    <published>2019-01-20T11:24:35.000Z</published>
    <updated>2019-01-20T12:09:02.749Z</updated>
    
    <content type="html"><![CDATA[<h1 id="react-中-event-对象控制台输出-null-的问题"><a href="#react-中-event-对象控制台输出-null-的问题" class="headerlink" title="react 中 event 对象控制台输出 null 的问题"></a>react 中 event 对象控制台输出 null 的问题</h1><h2 id="在-react-中输出-event-对象，在控制台查看是-null"><a href="#在-react-中输出-event-对象，在控制台查看是-null" class="headerlink" title="在 react 中输出 event 对象，在控制台查看是 null"></a>在 react 中输出 event 对象，在控制台查看是 null</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/reactEvent.png" alt="null" title="">                </div>                <div class="image-caption">null</div>            </figure><h2 id="解决的办法很简单，在-console-log-event-前使用-event-的-persist-方法即可。"><a href="#解决的办法很简单，在-console-log-event-前使用-event-的-persist-方法即可。" class="headerlink" title="解决的办法很简单，在 console.log(event) 前使用 event 的 persist() 方法即可。"></a>解决的办法很简单，在 console.log(event) 前使用 event 的 persist() 方法即可。</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> &lt;div onClick=&#123;</span><br><span class="line">      (e)=&gt;&#123;</span><br><span class="line">        e.persist()</span><br><span class="line">        console.log(e)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;&gt;</span><br><span class="line">    点击</span><br><span class="line">    &lt;/div&gt;;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/reactResEvent.png" alt="结果" title="">                </div>                <div class="image-caption">结果</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;react-中-event-对象控制台输出-null-的问题&quot;&gt;&lt;a href=&quot;#react-中-event-对象控制台输出-null-的问题&quot; class=&quot;headerlink&quot; title=&quot;react 中 event 对象控制台输出 null 的问题&quot;&gt;
      
    
    </summary>
    
    
      <category term="react" scheme="https://github.com/wangjinshen/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>redux-persist- 数据持久化</title>
    <link href="https://github.com/wangjinshen/2019/01/19/redux-persist-%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    <id>https://github.com/wangjinshen/2019/01/19/redux-persist-数据持久化/</id>
    <published>2019-01-19T12:36:42.000Z</published>
    <updated>2019-01-19T13:03:42.611Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install redux-persist</span><br></pre></td></tr></table></figure><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// configureStore.js</span></span><br><span class="line"><span class="comment">//引入redux</span></span><br><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">'redux'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; persistStore, persistReducer &#125; <span class="keyword">from</span> <span class="string">'redux-persist'</span></span><br><span class="line"><span class="keyword">import</span> storage <span class="keyword">from</span> <span class="string">'redux-persist/lib/storage'</span> <span class="comment">//defaults to localStorage for web and AsyncStorage for react-native 存到localStorage中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认Store</span></span><br><span class="line"><span class="keyword">const</span> initialState=&#123;</span><br><span class="line">        data：[]</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//订阅事件</span></span><br><span class="line"><span class="keyword">const</span> rootReducer = <span class="function">(<span class="params">state = initialState, &#123; type, payload &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"UPDATE"</span>: &#123;</span><br><span class="line">            <span class="keyword">return</span> &#123; ...state, <span class="attr">data</span>: [...payload] &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> state</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> persistConfig = &#123;</span><br><span class="line">  key: <span class="string">'root'</span>,</span><br><span class="line">  storage,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> persistedReducer = persistReducer(persistConfig, rootReducer)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> store = createStore(persistedReducer)</span><br><span class="line">  <span class="keyword">let</span> persistor = persistStore(store)</span><br><span class="line">  <span class="keyword">return</span> &#123; store, persistor &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
    
      <category term="react" scheme="https://github.com/wangjinshen/tags/react/"/>
    
      <category term="redux" scheme="https://github.com/wangjinshen/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>node-fetch 跨域</title>
    <link href="https://github.com/wangjinshen/2019/01/19/node-fetch%E8%B7%A8%E5%9F%9F/"/>
    <id>https://github.com/wangjinshen/2019/01/19/node-fetch跨域/</id>
    <published>2019-01-19T11:46:48.000Z</published>
    <updated>2019-01-19T12:05:14.117Z</updated>
    
    <content type="html"><![CDATA[<h1 id="node-fetch"><a href="#node-fetch" class="headerlink" title="node-fetch"></a>node-fetch</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install node-fetch --save</span><br><span class="line">yarn add node-fetch</span><br></pre></td></tr></table></figure><h2 id="引入使用"><a href="#引入使用" class="headerlink" title="引入使用"></a>引入使用</h2><h3 id="get-请求"><a href="#get-请求" class="headerlink" title="get 请求"></a>get 请求</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fetch = <span class="built_in">require</span>(<span class="string">"node-fetch"</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    searchResult(str,statr,end) &#123;</span><br><span class="line">        str = <span class="built_in">encodeURIComponent</span>(str)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">result, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            fetch(<span class="string">"https://www.xiachufang.com/juno/weapp/v2/search/universal_search.json?q="</span> + str + <span class="string">"&amp;"</span> + <span class="string">"offset="</span> + statr + <span class="string">"&amp;"</span> + <span class="string">"limit="</span> + end).then(<span class="function"><span class="params">res</span> =&gt;</span></span><br><span class="line">                res.text()</span><br><span class="line">            ).then(<span class="function"><span class="params">response</span> =&gt;</span></span><br><span class="line">                result(response)</span><br><span class="line">            );</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="post-请求"><a href="#post-请求" class="headerlink" title="post 请求"></a>post 请求</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fetch = <span class="built_in">require</span>(<span class="string">"node-fetch"</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    searchPOST(str,statr,end) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">result, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> body = &#123; <span class="attr">a</span>: end,<span class="attr">b</span>:statr &#125;;</span><br><span class="line">            fetch(<span class="string">'https://httpbin.org/post'</span>, &#123;</span><br><span class="line">                    method: <span class="string">'post'</span>,</span><br><span class="line">                    body:    <span class="built_in">JSON</span>.stringify(body),</span><br><span class="line">                &#125;)</span><br><span class="line">                .then(<span class="function"><span class="params">res</span> =&gt;</span> res.text())</span><br><span class="line">                .then(<span class="function"><span class="params">response</span> =&gt;</span>  result(response));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>npm地址： <a href="https://www.npmjs.com/package/node-fetch" target="_blank" rel="noopener">https://www.npmjs.com/package/node-fetch</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;node-fetch&quot;&gt;&lt;a href=&quot;#node-fetch&quot; class=&quot;headerlink&quot; title=&quot;node-fetch&quot;&gt;&lt;/a&gt;node-fetch&lt;/h1&gt;&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="node" scheme="https://github.com/wangjinshen/tags/node/"/>
    
      <category term="跨域" scheme="https://github.com/wangjinshen/tags/%E8%B7%A8%E5%9F%9F/"/>
    
      <category term="node-fetch" scheme="https://github.com/wangjinshen/tags/node-fetch/"/>
    
  </entry>
  
  <entry>
    <title>谷歌</title>
    <link href="https://github.com/wangjinshen/2019/01/19/%E8%B0%B7%E6%AD%8C/"/>
    <id>https://github.com/wangjinshen/2019/01/19/谷歌/</id>
    <published>2019-01-19T05:41:19.000Z</published>
    <updated>2019-01-19T05:43:40.029Z</updated>
    
    <content type="html"><![CDATA[<h1 id="学习地址"><a href="#学习地址" class="headerlink" title="学习地址"></a>学习地址</h1><p><a href="https://github.com/bannedbook">https://github.com/bannedbook</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;学习地址&quot;&gt;&lt;a href=&quot;#学习地址&quot; class=&quot;headerlink&quot; title=&quot;学习地址&quot;&gt;&lt;/a&gt;学习地址&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/bannedbook&quot;&gt;https://github.com/ban
      
    
    </summary>
    
    
      <category term="【谷歌】" scheme="https://github.com/wangjinshen/tags/%E3%80%90%E8%B0%B7%E6%AD%8C%E3%80%91/"/>
    
  </entry>
  
  <entry>
    <title>node- 连接 mysql</title>
    <link href="https://github.com/wangjinshen/2019/01/19/mysql-%E8%BF%9E%E6%8E%A5%E6%B1%A0/"/>
    <id>https://github.com/wangjinshen/2019/01/19/mysql-连接池/</id>
    <published>2019-01-19T02:37:30.000Z</published>
    <updated>2019-01-19T03:24:24.122Z</updated>
    
    <content type="html"><![CDATA[<h1 id="node-连接-mysql"><a href="#node-连接-mysql" class="headerlink" title="node- 连接 -mysql"></a>node- 连接 -mysql</h1><h2 id="下载-mysql"><a href="#下载-mysql" class="headerlink" title="下载 mysql"></a>下载 mysql</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn add mysql</span><br><span class="line">npm install mysql</span><br></pre></td></tr></table></figure><h2 id="引入-mysql"><a href="#引入-mysql" class="headerlink" title="引入 mysql"></a>引入 mysql</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入包</span></span><br><span class="line"><span class="keyword">var</span> mysql  = <span class="built_in">require</span>(<span class="string">'mysql'</span>);</span><br><span class="line"><span class="comment">//建立连接关系配置</span></span><br><span class="line"><span class="keyword">var</span> config  = &#123;</span><br><span class="line">    <span class="comment">//ip</span></span><br><span class="line">  host     : <span class="string">'localhost'</span>,</span><br><span class="line">    <span class="comment">//mysql用户名  默认root</span></span><br><span class="line">  user     : <span class="string">'me'</span>,</span><br><span class="line">     <span class="comment">//mysql用户密码</span></span><br><span class="line">  password : <span class="string">'secret'</span>,</span><br><span class="line">    <span class="comment">//库名</span></span><br><span class="line">  database : <span class="string">'my_db'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="node-与-mysql-的普通连接"><a href="#node-与-mysql-的普通连接" class="headerlink" title="node 与 mysql 的普通连接"></a>node 与 mysql 的普通连接</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">query</span>(<span class="params">sql, callback</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//建立联系</span></span><br><span class="line">    <span class="keyword">var</span> connection = mysql.createConnection(config);</span><br><span class="line">    <span class="comment">//监听连接是否成功   不成功抛出错误</span></span><br><span class="line">    connection.connect(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123; <span class="built_in">console</span>.log(err) &#125;);</span><br><span class="line">    <span class="comment">//查询</span></span><br><span class="line">    connection.query(sql, <span class="function"><span class="keyword">function</span>(<span class="params">qerr, rows, fields</span>) </span>&#123;</span><br><span class="line">        <span class="comment">//关闭数据库连接</span></span><br><span class="line">        connection.end(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123; <span class="built_in">console</span>.log(err) &#125;);</span><br><span class="line">        <span class="comment">//事件驱动回调</span></span><br><span class="line">        callback(qerr, rows, fields);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使用</span></span><br><span class="line">query(<span class="string">"mysql语句"</span>,callback(err,rows, fields)&#123;</span><br><span class="line">   <span class="comment">//err 错误信息</span></span><br><span class="line">   <span class="comment">//rows 结果</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="node-链接-mysql-创建连接池"><a href="#node-链接-mysql-创建连接池" class="headerlink" title="node 链接 mysql 创建连接池"></a>node 链接 mysql 创建连接池</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> connection=mysql.createPool(config.dev_sql_config)</span><br><span class="line"><span class="keyword">const</span> query=<span class="function">(<span class="params">sql</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">    connection.getConnection(<span class="function">(<span class="params">err,connect</span>)=&gt;</span>&#123;</span><br><span class="line">      connect.query(sql,(sqlerr,rows,fields)=&gt;&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">          <span class="built_in">console</span>.log(err)</span><br><span class="line">          reject(err)</span><br><span class="line">          <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        resolve(rows)</span><br><span class="line">        <span class="comment">//释放连接</span></span><br><span class="line">        connect.release()</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="常用数据库操作语句"><a href="#常用数据库操作语句" class="headerlink" title="常用数据库操作语句"></a>常用数据库操作语句</h2><h3 id="表查询语句"><a href="#表查询语句" class="headerlink" title="表查询语句"></a>表查询语句</h3><p>字符串查询范围<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * <span class="keyword">from</span> school where id=’aa’</span><br></pre></td></tr></table></figure></p><p>数值查询范围<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id,name <span class="keyword">from</span> school where num&gt;<span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>模糊查询<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * <span class="keyword">from</span> school where name like ‘% 陈 %’</span><br></pre></td></tr></table></figure></p><p>数据截取（截取前十条数据）<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * <span class="keyword">from</span> school limit <span class="number">0</span>,<span class="number">10</span></span><br></pre></td></tr></table></figure></p><p>数据查询排序 (desc 降序，asc 升序）<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * <span class="keyword">from</span> school limit <span class="number">0</span>,<span class="number">10</span> order by desc</span><br></pre></td></tr></table></figure></p><p>表连接查询（多表查询，表结构相同）<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"select * from (select * from table_a UNION ALL select * from table_b)as tabel_all "</span></span><br></pre></td></tr></table></figure></p><h3 id="表插入语句"><a href="#表插入语句" class="headerlink" title="表插入语句"></a>表插入语句</h3><p>单纯插入表数据<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into tabel_a(id,name) values(<span class="number">1</span>,”chen”)</span><br></pre></td></tr></table></figure></p><p>创建新表，并复制另外一个表格中的数据<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id,name into tabel_b <span class="keyword">from</span> table_a</span><br></pre></td></tr></table></figure></p><p>复制另外一个表中数据进行插入<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into tabte_b(id,name) select id，name <span class="keyword">from</span> tabel_a</span><br></pre></td></tr></table></figure></p><p>删除表数据<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> class_one_list where id=‘<span class="number">1</span>’</span><br></pre></td></tr></table></figure></p><p>更新表数据<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update class_one_list set twoListNum=’<span class="number">1</span>’,artListNum=’<span class="number">2</span>’ where id=’<span class="number">2</span>’</span><br></pre></td></tr></table></figure></p><p>创建表<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> person (<span class="built_in">number</span> <span class="built_in">INT</span>(<span class="number">11</span>), <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">255</span>), birthday <span class="built_in">DATE</span>);</span><br></pre></td></tr></table></figure></p><p>修改表名<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table table_name rename table_new_name</span><br></pre></td></tr></table></figure></p><p>删除表<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE  tbl_name;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;node-连接-mysql&quot;&gt;&lt;a href=&quot;#node-连接-mysql&quot; class=&quot;headerlink&quot; title=&quot;node- 连接 -mysql&quot;&gt;&lt;/a&gt;node- 连接 -mysql&lt;/h1&gt;&lt;h2 id=&quot;下载-mysql&quot;&gt;&lt;a href
      
    
    </summary>
    
    
      <category term="node" scheme="https://github.com/wangjinshen/tags/node/"/>
    
      <category term="mysql" scheme="https://github.com/wangjinshen/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>vue-router</title>
    <link href="https://github.com/wangjinshen/2019/01/18/vue-route/"/>
    <id>https://github.com/wangjinshen/2019/01/18/vue-route/</id>
    <published>2019-01-18T01:03:28.000Z</published>
    <updated>2019-01-18T01:15:10.268Z</updated>
    
    <content type="html"><![CDATA[<h1 id="route"><a href="#route" class="headerlink" title="route"></a>route</h1><h2 id="安装-vue-roter"><a href="#安装-vue-roter" class="headerlink" title="安装 vue-roter"></a>安装 vue-roter</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router --save-dev</span><br><span class="line">yarn add vue-router -dev</span><br></pre></td></tr></table></figure><h2 id="init-使用"><a href="#init-使用" class="headerlink" title="init 使用"></a>init 使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> VueRouter form <span class="string">"vue-router"</span></span><br><span class="line"></span><br><span class="line">挂载在全局上</span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"></span><br><span class="line">实例</span><br><span class="line"><span class="keyword">const</span> route = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    <span class="comment">// 配置路由</span></span><br><span class="line">    routes:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 路由地址</span></span><br><span class="line">            path: <span class="string">'/'</span>,</span><br><span class="line">            <span class="comment">// 当路由是默认 "/" 时加载”/index 路由</span></span><br><span class="line">            redirect: <span class="string">'/index'</span></span><br><span class="line">         &#125;,</span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            path:<span class="string">"/index"</span>，</span><br><span class="line">            <span class="comment">// 在&lt;router-view&gt;&lt;/router-view&gt;显示的内容组件</span></span><br><span class="line">            component:index，<span class="comment">//index 是一个组件</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="页面配置"><a href="#页面配置" class="headerlink" title="页面配置"></a>页面配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-view&gt;&lt;/router-view&gt;标签  显示路由中 component 引进的内容</span><br></pre></td></tr></table></figure><h2 id="切换路由"><a href="#切换路由" class="headerlink" title="切换路由"></a>切换路由</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link to=&quot;/index&quot; tag=&quot;span&quot;&gt;index&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">to: 属性制指定跳转到某一个路由</span><br><span class="line"></span><br><span class="line"> 例：/index</span><br><span class="line">    当点击后&lt;router-view&gt;&lt;/router-view&gt;内将会显示 /index 中的组件</span><br><span class="line"></span><br><span class="line">tsg：指定在页面中显示出什么类型的 的标签</span><br><span class="line"></span><br><span class="line">    例如：tag=&quot;span&quot; 在以页面中 &lt;router-link&gt;标签会转为 span 标签显示</span><br></pre></td></tr></table></figure><h2 id="导航守卫"><a href="#导航守卫" class="headerlink" title="导航守卫"></a>导航守卫</h2><h2 id="导航”表示路由正在发生改变。"><a href="#导航”表示路由正在发生改变。" class="headerlink" title="导航”表示路由正在发生改变。"></a>导航”表示路由正在发生改变。</h2><p>主要用来通过跳转或取消的方式守卫导航</p><p>有多种机会植入路由导航过程中：全局的，单个路由独享的，或者组件级的。</p><p>参数或查询的改变并不会触发进入 / 离开的导航守卫</p><h2 id="route-beforeEach"><a href="#route-beforeEach" class="headerlink" title="route.beforeEach"></a>route.beforeEach</h2><p><code>route</code> 是 vue-<code>router</code> 的实例</p><p>注册一个全局前置守卫：<br>route.beforeEach(to,from,next){</p><p>}</p><p><code>to</code>:  即将要进入的目标 路由对象</p><p><code>from</code>: 当前导航正要离开的路由</p><p><code>next</code>: 一定要调用该方法来 resolve 这个钩子。执行效果依赖 <code>next</code> 方法的调用参数。<br>不调用不执行</p><p><code>next</code>(): 进行管道中的下一个钩子。如果全部钩子执行完了，则导航的状态就是 confirmed （确认的）。</p><p><code>next(false)</code>: 中断当前的导航。如果浏览器的 URL 改变了 （可能是用户手动或者浏览器后退按钮），那么 URL 地址会重置到 from 路由对应的地址。</p><p><code>next(&#39;/&#39;)</code> 或者 <code>next({ path: &#39;/&#39; })</code>：跳转到一个不同的地址。当前的导航被中断，然后进行一个新的导航。<br>你可以向 next 传递任意位置对象<br>且允许设置诸如<code>replace: true、name: &#39;home&#39;</code>之类的选项以及任何用在 <code>router-link</code> 的 <code>to prop</code>或 <code>router.push</code> 中的选项。</p><h2 id="全局解析首位"><a href="#全局解析首位" class="headerlink" title="全局解析首位"></a>全局解析首位</h2><p>2.5.0+ 你可以用<code>router.beforeResolve</code> 注册一个全局守卫。这和 <code>router.beforeEach</code> 类似，区别是在导航被确认之前，<br>同时在所有组件内守卫和异步路由组件被解析之后，<br>解析守卫就被调用。</p><h2 id="全局后置钩子"><a href="#全局后置钩子" class="headerlink" title="全局后置钩子"></a>全局后置钩子</h2><p>你也可以注册全局后置钩子，然而和守卫不同的是，这些钩子不会接受 next 函数也不会改变导航本身：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">router.afterEach(<span class="function">(<span class="params">to, <span class="keyword">from</span></span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="路由独享的守卫"><a href="#路由独享的守卫" class="headerlink" title="路由独享的守卫"></a>路由独享的守卫</h2><p>可以在路由配置上直接定义 <code>beforeEnter</code></p><p>例如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">routes: [</span><br><span class="line">    &#123;</span><br><span class="line">    path: <span class="string">'/foo'</span>,</span><br><span class="line">    component: Foo,</span><br><span class="line">    beforeEnter: <span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="组件内的守卫"><a href="#组件内的守卫" class="headerlink" title="组件内的守卫"></a>组件内的守卫</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Foo = &#123;</span><br><span class="line">template: <span class="string">`...`</span>,</span><br><span class="line">beforeRouteEnter (to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在渲染该组件的对应路由被 confirm 前调用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 不！能！获取组件实例 `this`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 因为当守卫执行前，组件实例还没被创建</span></span><br><span class="line">&#125;,</span><br><span class="line">beforeRouteUpdate (to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在当前路由改变，但是该组件被复用时调用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以访问组件实例 `this`</span></span><br><span class="line">&#125;,</span><br><span class="line">beforeRouteLeave (to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导航离开该组件的对应路由时调用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以访问组件实例 `this`</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">beforeRouteEnter (to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(to)</span><br><span class="line">next()</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">props:&#123;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">components:&#123;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">data()&#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">computed:&#123;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">created()&#123;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">mounted()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>beforRouteEnter  不能获取到 this    但是也可通 next 的回调函数获取</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">beforeRouteEnter (to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">    next(<span class="function"><span class="params">vm</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 通过 vm 访问组件实例</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个离开守卫通常用来禁止用户在还未保存修改前突然离开。该导航可以通过 next(false) 来取消。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">beforeRouteLeave (to, <span class="keyword">from</span> , next) &#123;</span><br><span class="line">    <span class="keyword">const</span> answer = <span class="built_in">window</span>.confirm(<span class="string">'Do you really want to leave? you have unsaved changes!'</span>)</span><br><span class="line">    <span class="keyword">if</span> (answer) &#123;</span><br><span class="line">        <span class="comment">// 为 true 就执行跳转路由</span></span><br><span class="line">        next()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        反之就停止跳转  留在当前的路由</span><br><span class="line">        next(<span class="literal">false</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完整的导航解析流程"><a href="#完整的导航解析流程" class="headerlink" title="完整的导航解析流程"></a>完整的导航解析流程</h2><ol><li>导航被触发。</li><li>在失活的组件里调用离开守卫。</li><li>调用全局的 beforeEach 守卫。</li><li>在重用的组件里调用 beforeRouteUpdate 守卫 (2.2+)。</li><li>在路由配置里调用 beforeEnter。</li><li>解析异步路由组件。</li><li>在被激活的组件里调用 beforeRouteEnter。</li><li>调用全局的 beforeResolve 守卫 (2.5+)。</li><li>导航被确认。</li><li>调用全局的 afterEach 钩子。</li><li>触发 DOM 更新。</li><li>用创建好的实例调用 beforeRouteEnter 守卫中传给 next 的回调函数。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;route&quot;&gt;&lt;a href=&quot;#route&quot; class=&quot;headerlink&quot; title=&quot;route&quot;&gt;&lt;/a&gt;route&lt;/h1&gt;&lt;h2 id=&quot;安装-vue-roter&quot;&gt;&lt;a href=&quot;#安装-vue-roter&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="vue" scheme="https://github.com/wangjinshen/tags/vue/"/>
    
      <category term="router" scheme="https://github.com/wangjinshen/tags/router/"/>
    
  </entry>
  
  <entry>
    <title>action</title>
    <link href="https://github.com/wangjinshen/2019/01/16/action/"/>
    <id>https://github.com/wangjinshen/2019/01/16/action/</id>
    <published>2019-01-16T12:57:34.000Z</published>
    <updated>2019-01-16T13:00:03.199Z</updated>
    
    <content type="html"><![CDATA[<h1 id="wepy-redux"><a href="#wepy-redux" class="headerlink" title="wepy-redux"></a>wepy-redux</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install redux redux-actions redux-promise wepy-redux --save</span><br></pre></td></tr></table></figure><h2 id="创建-store"><a href="#创建-store" class="headerlink" title="创建 store"></a>创建 store</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore, applyMiddleware &#125; <span class="keyword">from</span> <span class="string">"redux"</span>;</span><br><span class="line"><span class="keyword">import</span> Reducers <span class="keyword">from</span> <span class="string">"./reducer"</span>;</span><br><span class="line"><span class="keyword">import</span> promiseMiddleware <span class="keyword">from</span> <span class="string">"redux-promise"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写法一：</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">configStore</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> createStore(Reducers, applyMiddleware(promiseMiddleware))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//写法二</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> createStore(Reducers, applyMiddleware(promiseMiddleware))</span><br></pre></td></tr></table></figure><h2 id="创建-reducer"><a href="#创建-reducer" class="headerlink" title="创建 reducer"></a>创建 reducer</h2><p><strong>rank.js</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> defaultState = &#123;</span><br><span class="line">  rankList: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> rankReducer = <span class="function">(<span class="params">state = defaultState, action</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; type, payload &#125; = action;</span><br><span class="line">  <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">"UPDATE"</span>:</span><br><span class="line">      <span class="keyword">return</span> &#123; ...state, <span class="attr">rankList</span>: payload &#125;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">return</span> state;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> rankReducer;</span><br></pre></td></tr></table></figure></p><p><strong>index.js</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; combineReducers &#125; <span class="keyword">from</span> <span class="string">"redux"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rankReducer <span class="keyword">from</span> <span class="string">"./rank"</span>;</span><br><span class="line"><span class="keyword">import</span> topListReducer <span class="keyword">from</span> <span class="string">"./toplist"</span>;</span><br><span class="line"><span class="keyword">import</span> searchReducer <span class="keyword">from</span> <span class="string">"./search"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Reducers = combineReducers(&#123;</span><br><span class="line">  rankReducer,</span><br><span class="line">  topListReducer,</span><br><span class="line">  searchReducer,</span><br><span class="line">  ...</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Reducers;</span><br></pre></td></tr></table></figure></p><h2 id="创建-action"><a href="#创建-action" class="headerlink" title="创建 action"></a>创建 action</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; RNAK_UPDATE &#125; <span class="keyword">from</span> <span class="string">"../type/rank"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createAction &#125; <span class="keyword">from</span> <span class="string">"redux-actions"</span>;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">"@/utils/request"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式一:</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params">payload</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    type: RNAK_UPDATE,</span><br><span class="line">    payload</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式二：</span></span><br><span class="line"><span class="keyword">const</span> getJson = <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> result = <span class="keyword">await</span> axios.get(url);</span><br><span class="line">  <span class="keyword">return</span> result.data.data.slider;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> update = createAction(RNAK_UPDATE, () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="string">"https://c.y.qq.com/musichall/fcgi-bin/fcg_yqqhomepagerecommend.fcg"</span>;</span><br><span class="line">  <span class="keyword">return</span> getJson(url);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="创建-type"><a href="#创建-type" class="headerlink" title="创建 type"></a>创建 type</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> RNAK_UPDATE = <span class="string">"UPDATE"</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> TOPLIST_UPDATE = <span class="string">"UPDATE"</span>;</span><br></pre></td></tr></table></figure><h2 id="绑定及监听"><a href="#绑定及监听" class="headerlink" title="绑定及监听"></a>绑定及监听</h2><p>在app.wepy文件中，添加下面代码：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; setStore &#125; <span class="keyword">from</span> <span class="string">'wepy-redux'</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store'</span></span><br><span class="line">setStore(store)</span><br></pre></td></tr></table></figure></p><p>setStore()是用来将仓库中的数据绑定到页面中</p><p>类似react-redux中的 <code>&lt;Provider store={store}&gt;&lt;/Provider&gt;组件</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;wepy-redux&quot;&gt;&lt;a href=&quot;#wepy-redux&quot; class=&quot;headerlink&quot; title=&quot;wepy-redux&quot;&gt;&lt;/a&gt;wepy-redux&lt;/h1&gt;&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="react" scheme="https://github.com/wangjinshen/tags/react/"/>
    
      <category term="redux" scheme="https://github.com/wangjinshen/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>react-component-父子通讯</title>
    <link href="https://github.com/wangjinshen/2019/01/16/react-component-%E7%88%B6%E5%AD%90%E9%80%9A%E8%AE%AF/"/>
    <id>https://github.com/wangjinshen/2019/01/16/react-component-父子通讯/</id>
    <published>2019-01-16T10:13:12.000Z</published>
    <updated>2019-01-16T12:53:52.914Z</updated>
    
    <content type="html"><![CDATA[<h1 id="组件通讯"><a href="#组件通讯" class="headerlink" title="组件通讯"></a>组件通讯</h1><h2 id="父子通讯"><a href="#父子通讯" class="headerlink" title="父子通讯"></a>父子通讯</h2><p>父级组件调用子组件，通过props来传递参数，子组件通过this.props来接收</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Children</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">render()&#123;</span><br><span class="line"><span class="keyword">const</span> &#123; datalist &#125; = <span class="keyword">this</span>.props;</span><br><span class="line"><span class="keyword">return</span> &lt;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">render()&#123;</span><br><span class="line"><span class="keyword">const</span> &#123; datalist &#125; = [];</span><br><span class="line"><span class="keyword">return</span> &lt;div&gt;</span><br><span class="line">&lt;Children datalist=&#123;datalist&#125;&gt;&lt;/Children&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="子父通讯"><a href="#子父通讯" class="headerlink" title="子父通讯"></a>子父通讯</h2><p>父级组件通过props给子组件传递一个回调函数，子级组件调用父级传递过来的回调，将参数返回<br><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Children</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">componentDidMount()&#123;</span><br><span class="line"><span class="keyword">const</span> &#123; getData &#125; = <span class="keyword">this</span>.props;</span><br><span class="line">getData([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line">&#125;</span><br><span class="line">render()&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &lt;div&gt;</span><br><span class="line">this is children</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">getData(val)&#123;</span><br><span class="line"><span class="comment">//[1,2,3,4,5]</span></span><br><span class="line"><span class="built_in">console</span>.log(val)</span><br><span class="line">&#125;</span><br><span class="line">render()&#123;</span><br><span class="line"><span class="keyword">return</span> &lt;div&gt;</span><br><span class="line">&lt;Children getData=&#123;this.getData&#125;&gt;&lt;/Children&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="同级通讯"><a href="#同级通讯" class="headerlink" title="同级通讯"></a>同级通讯</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save events</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> EventEmitter = <span class="built_in">require</span>(<span class="string">'events'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> EventBus = <span class="keyword">new</span> EventEmitter()</span><br><span class="line"><span class="comment">//事件订阅</span></span><br><span class="line">EventBus.on(<span class="string">"message"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">text</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(text)  <span class="comment">//hello world</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//事件发布</span></span><br><span class="line">EventBus.emit(<span class="string">"message"</span>, <span class="string">'hello world'</span>)</span><br></pre></td></tr></table></figure><h2 id="跨级通讯"><a href="#跨级通讯" class="headerlink" title="跨级通讯"></a>跨级通讯</h2><p><strong>案例描述</strong>:</p><p>当前有三个组件，包裹顺序依次是： Parent &gt; Middle &gt; Children<br>现在 Parent组件有数据要传递给 Children组件</p><ul><li><p>Parent &gt; Middle &gt; Children<br>具体方案请参考 props 传参</p></li><li><p>Parent &gt; Children<br>具体方案如下，通context对象完成数据传递：</p></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> PropTypes <span class="keyword">from</span> <span class="string">"prop-types"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子级</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Children</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> contextTypes = &#123;</span><br><span class="line">propA: PropTypes.string</span><br><span class="line">methodA: PropTypes.func</span><br><span class="line">&#125;</span><br><span class="line">render()&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &lt;div&gt;</span><br><span class="line">this is children: &#123;this.context.propA&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 中间</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Middle</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render () &#123;</span><br><span class="line">    <span class="keyword">return</span> &lt;Children /&gt;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">// 父级</span><br><span class="line">class Parent extends React.Component&#123;</span><br><span class="line">// 声明Context对象属性</span><br><span class="line">static childContextTypes = &#123;</span><br><span class="line">propA: PropTypes.string,</span><br><span class="line">methodA: PropTypes.func</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 返回Context对象，方法名是约定好的</span><br><span class="line">getChildContext () &#123;</span><br><span class="line">return &#123;</span><br><span class="line">  propA: 'propA',</span><br><span class="line">  methodA: () =&gt; 'methodA'</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">render()&#123;</span><br><span class="line">return &lt;div&gt;</span><br><span class="line">&lt;Middle/&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="redux"><a href="#redux" class="headerlink" title="redux"></a>redux</h2><p>全局状态的管理库，详情请看<a href="../redux/README.md">redux指南</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;组件通讯&quot;&gt;&lt;a href=&quot;#组件通讯&quot; class=&quot;headerlink&quot; title=&quot;组件通讯&quot;&gt;&lt;/a&gt;组件通讯&lt;/h1&gt;&lt;h2 id=&quot;父子通讯&quot;&gt;&lt;a href=&quot;#父子通讯&quot; class=&quot;headerlink&quot; title=&quot;父子通讯&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="react" scheme="https://github.com/wangjinshen/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>react</title>
    <link href="https://github.com/wangjinshen/2019/01/15/react/"/>
    <id>https://github.com/wangjinshen/2019/01/15/react/</id>
    <published>2019-01-15T15:37:25.000Z</published>
    <updated>2019-01-15T15:37:36.189Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="react" scheme="https://github.com/wangjinshen/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>测试  Holle world</title>
    <link href="https://github.com/wangjinshen/2019/01/15/%E6%B5%8B%E8%AF%95-Holle-world/"/>
    <id>https://github.com/wangjinshen/2019/01/15/测试-Holle-world/</id>
    <published>2019-01-15T11:30:49.000Z</published>
    <updated>2019-01-16T00:20:07.491Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="tags" scheme="https://github.com/wangjinshen/tags/tags/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://github.com/wangjinshen/2019/01/15/hello-world/"/>
    <id>https://github.com/wangjinshen/2019/01/15/hello-world/</id>
    <published>2019-01-15T11:16:02.854Z</published>
    <updated>2019-01-16T06:47:52.083Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="bolg" scheme="https://github.com/wangjinshen/tags/bolg/"/>
    
  </entry>
  
</feed>
