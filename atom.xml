<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王瑾深</title>
  
  <subtitle>做一个爱折腾的程序员</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/"/>
  <updated>2019-03-27T12:25:58.581Z</updated>
  <id>git@github.com:wangjinshen/wangjinshen.github.io.git/</id>
  
  <author>
    <name>王瑾深</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>scroll下拉加载+防抖</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/03/27/scroll%E4%B8%8B%E6%8B%89%E5%8A%A0%E8%BD%BD-%E9%98%B2%E6%8A%96/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/03/27/scroll下拉加载-防抖/</id>
    <published>2019-03-27T12:09:05.000Z</published>
    <updated>2019-03-27T12:25:58.581Z</updated>
    
    <content type="html"><![CDATA[<h1 id="scroll下拉加载-防抖"><a href="#scroll下拉加载-防抖" class="headerlink" title="scroll下拉加载+防抖"></a>scroll下拉加载+防抖</h1><p>代码比较简单<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;Page Title&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">        &lt;li&gt;占位符&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li&gt;占位符&lt;/</span>li&gt;</span><br><span class="line">    &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="tip"&gt;&lt;/</span>div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> handle = <span class="literal">null</span></span><br><span class="line">        <span class="keyword">var</span> sum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">const</span> digital = <span class="function">(<span class="params">func, time</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">//俩个参数  func函数  time 延迟时间</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//返回函数执行次函数</span></span><br><span class="line">            <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">document</span>.querySelector(<span class="string">".tip"</span>).innerHTML = <span class="string">"正在加载"</span></span><br><span class="line">                clearTimeout(handle)</span><br><span class="line">                handle = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">//执行func函数指向window 传入参数</span></span><br><span class="line">                    func.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>)</span><br><span class="line">                &#125;, time);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">window</span>.onscroll = digital(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">            sum++</span><br><span class="line">            <span class="comment">//视口高度+scrollY高度</span></span><br><span class="line">            <span class="keyword">let</span> scrollHei = <span class="built_in">document</span>.documentElement.clientHeight + <span class="built_in">window</span>.scrollY</span><br><span class="line">            <span class="comment">//获取document整体高度</span></span><br><span class="line">            <span class="keyword">let</span> docHeight = <span class="built_in">document</span>.documentElement.offsetHeight</span><br><span class="line">            <span class="comment">//视口高度+scrollY高度===获取document整体高度 代表到达底部</span></span><br><span class="line">            <span class="keyword">if</span> (docHeight == scrollHei) &#123;</span><br><span class="line">                <span class="comment">//sum代表加载次数</span></span><br><span class="line">                <span class="keyword">if</span> (sum &gt; <span class="number">10</span>) &#123;</span><br><span class="line">                    <span class="built_in">document</span>.querySelector(<span class="string">".tip"</span>).innerHTML = <span class="string">"没有更多了"</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> para = <span class="built_in">document</span>.createElement(<span class="string">"p"</span>);</span><br><span class="line">                    para.innerHTML = <span class="string">"这是新段落。"</span></span><br><span class="line">                    <span class="built_in">document</span>.getElementsByTagName(<span class="string">"ul"</span>)[<span class="number">0</span>].appendChild(para)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">5000</span>)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;scroll下拉加载-防抖&quot;&gt;&lt;a href=&quot;#scroll下拉加载-防抖&quot; class=&quot;headerlink&quot; title=&quot;scroll下拉加载+防抖&quot;&gt;&lt;/a&gt;scroll下拉加载+防抖&lt;/h1&gt;&lt;p&gt;代码比较简单&lt;br&gt;&lt;figure class=&quot;h
      
    
    </summary>
    
    
      <category term="scroll下拉加载+防抖" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/scroll%E4%B8%8B%E6%8B%89%E5%8A%A0%E8%BD%BD-%E9%98%B2%E6%8A%96/"/>
    
  </entry>
  
  <entry>
    <title>日期对象Date</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/03/27/%E6%97%B6%E9%97%B4%E5%AF%B9%E8%B1%A1Date/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/03/27/时间对象Date/</id>
    <published>2019-03-27T01:17:42.000Z</published>
    <updated>2019-03-27T02:02:02.636Z</updated>
    
    <content type="html"><![CDATA[<h1 id="js-日期对象"><a href="#js-日期对象" class="headerlink" title="js 日期对象"></a>js 日期对象</h1><h2 id="一个简陋的倒计时"><a href="#一个简陋的倒计时" class="headerlink" title="一个简陋的倒计时"></a>一个简陋的倒计时</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">result</span>(<span class="params">nian</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//当前时间</span></span><br><span class="line">    <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">    <span class="keyword">var</span> Ntime = date.getTime()</span><br><span class="line">    <span class="comment">//未来时间</span></span><br><span class="line">    <span class="keyword">var</span> Ddate = <span class="keyword">new</span> <span class="built_in">Date</span>(nian)</span><br><span class="line">    <span class="keyword">var</span> Dtime = Ddate.getTime()</span><br><span class="line">    <span class="comment">//时间差</span></span><br><span class="line">    <span class="keyword">var</span> newDate = Dtime - Ntime</span><br><span class="line">    <span class="keyword">if</span>(Dtime&lt;Ntime)&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            mag:<span class="string">"请输入未来时间"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//算法</span></span><br><span class="line">    <span class="keyword">var</span> yearLevelValue = <span class="number">365</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">var</span> monthLevelValue = <span class="number">30</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">var</span> dayLevelValue = <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">var</span> hourLevelValue = <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">var</span> minuteLevelValue = <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">    <span class="comment">// 年</span></span><br><span class="line">    <span class="keyword">var</span> Ogetyear = <span class="built_in">Math</span>.floor(newDate / yearLevelValue)</span><br><span class="line">    <span class="comment">//月</span></span><br><span class="line">    <span class="keyword">var</span> Ogetmonth = <span class="built_in">Math</span>.floor(newDate % yearLevelValue / monthLevelValue)</span><br><span class="line">    <span class="comment">//日</span></span><br><span class="line">    <span class="keyword">var</span> Ogetday = <span class="built_in">Math</span>.floor(newDate % yearLevelValue % monthLevelValue / dayLevelValue)</span><br><span class="line">    <span class="comment">//时</span></span><br><span class="line">    <span class="keyword">var</span> Ogethour = <span class="built_in">Math</span>.floor(newDate % yearLevelValue % monthLevelValue % dayLevelValue / hourLevelValue)</span><br><span class="line">    <span class="comment">//分</span></span><br><span class="line">    <span class="keyword">var</span> Ogetminu = <span class="built_in">Math</span>.floor(newDate % yearLevelValue % monthLevelValue % dayLevelValue % hourLevelValue / minuteLevelValue)</span><br><span class="line">    <span class="comment">//秒</span></span><br><span class="line">    <span class="keyword">var</span> Ogetmiao = <span class="built_in">Math</span>.floor(newDate % yearLevelValue % monthLevelValue % dayLevelValue % hourLevelValue % minuteLevelValue / <span class="number">1000</span>)</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line"></span><br><span class="line">        Ogetyear,</span><br><span class="line">        Ogetmonth,</span><br><span class="line">        Ogetday,</span><br><span class="line">        Ogethour,</span><br><span class="line">        Ogetminu,</span><br><span class="line">        Ogetmiao</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> obj = result(<span class="string">"2019,4,1"</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`还有<span class="subst">$&#123;obj.Ogetday&#125;</span>天<span class="subst">$&#123;obj.Ogethour&#125;</span>小时<span class="subst">$&#123;obj.Ogetminu&#125;</span>分<span class="subst">$&#123;obj.Ogetmiao&#125;</span>秒`</span>)</span><br><span class="line">&#125;, <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><h2 id="Date-对象的一些方法"><a href="#Date-对象的一些方法" class="headerlink" title="Date 对象的一些方法"></a>Date 对象的一些方法</h2><h3 id="获取日期对象中的日期"><a href="#获取日期对象中的日期" class="headerlink" title="获取日期对象中的日期"></a>获取日期对象中的日期</h3><p>var date = new Date()<br>将日期对象转换为字符串可以使用以下4种方法：</p><ul><li><p>date.toString();//将日期对象转换为字符串时，采用的是本地时间</p></li><li><p>date.toLocalString();//将日期对象转换为字符串，采用的是本地时间，显示的是地方日期的格式</p></li><li><p>date.toUTCString();//将日期对象转换为字符串时，采用的是世界时间。</p></li><li><p>date.toGMTString();//将日期对象转换为字符串时，采用的是GMT时间，但是已被禁止使用，一般用toUTCString()方</p></li><li><p>date.getYear();//获取年份，但不建议使用。</p></li><li><p>date.getFullYear();//获取年份，，以四位数显式，建议使用       </p></li><li><p>date.getMonth();//获取月份，值为0-11，一月份为0，二月份为1…</p></li><li><p>date.getDate();//获取天数，即一个月中的某一天</p></li><li><p>date.getDay();//获取一周中的第几天，值为0-6，周日为0…</p></li><li><p>date.getHours();//返回小时部分</p></li><li><p>date.getMinutes();//返回分钟部分</p></li><li><p>date.getSeconds();//返回秒钟部分    </p></li><li><p>date.getMilliseconds();//返回毫秒部分</p></li><li><p>date.getTime();//返回日期对象中的时间与1970年1月1日0时0分0秒所间隔的毫秒数</p></li></ul><h3 id="设置日期对象中的日期"><a href="#设置日期对象中的日期" class="headerlink" title="设置日期对象中的日期"></a>设置日期对象中的日期</h3><ul><li><p>date.setYear(year);//不建议使用</p></li><li><p>date.setFullYear(year,month,day);//year四位数;month：0-11，该参数可省略;day：1-31， 该参数可省略  </p></li><li><p>date.setMonth(month,day);//month：0-11;day：1-31， 该参数可省略 </p></li><li><p>date.getDate(day);//day：1-31</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;js-日期对象&quot;&gt;&lt;a href=&quot;#js-日期对象&quot; class=&quot;headerlink&quot; title=&quot;js 日期对象&quot;&gt;&lt;/a&gt;js 日期对象&lt;/h1&gt;&lt;h2 id=&quot;一个简陋的倒计时&quot;&gt;&lt;a href=&quot;#一个简陋的倒计时&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="js" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/js/"/>
    
      <category term="日期对象" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/%E6%97%A5%E6%9C%9F%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>利用对象计算字符串出现次数</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/03/26/%E5%88%A9%E7%94%A8%E5%AF%B9%E8%B1%A1%E8%AE%A1%E7%AE%97%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/03/26/利用对象计算字符串出现次数/</id>
    <published>2019-03-26T07:50:58.000Z</published>
    <updated>2019-03-26T07:53:25.400Z</updated>
    
    <content type="html"><![CDATA[<h1 id="利用对象计算字符串出现次数"><a href="#利用对象计算字符串出现次数" class="headerlink" title="利用对象计算字符串出现次数"></a>利用对象计算字符串出现次数</h1><p>比较简单直接上代码<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">'sdfssaaasasasaasaa'</span>;</span><br><span class="line"><span class="keyword">var</span> obj =&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span>(obj.hasOwnProperty(str[i]))&#123;</span><br><span class="line">        <span class="keyword">let</span> sum = str[i]</span><br><span class="line">        obj[sum]+=<span class="number">1</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> sum = str[i]</span><br><span class="line">        obj[sum]=<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> objSum = <span class="built_in">Object</span>.values(obj)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="keyword">if</span> (obj.hasOwnProperty(key)) &#123;</span><br><span class="line">        <span class="keyword">if</span>(obj[key]===<span class="built_in">Math</span>.max(...objSum))&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(key, obj[key])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;利用对象计算字符串出现次数&quot;&gt;&lt;a href=&quot;#利用对象计算字符串出现次数&quot; class=&quot;headerlink&quot; title=&quot;利用对象计算字符串出现次数&quot;&gt;&lt;/a&gt;利用对象计算字符串出现次数&lt;/h1&gt;&lt;p&gt;比较简单直接上代码&lt;br&gt;&lt;figure class
      
    
    </summary>
    
    
      <category term="js" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Generator</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/03/21/Generator/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/03/21/Generator/</id>
    <published>2019-03-21T11:15:08.000Z</published>
    <updated>2019-03-22T02:22:52.133Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Generator函数"><a href="#Generator函数" class="headerlink" title="Generator函数"></a>Generator函数</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>Generator 函数是 ES6 提供的一种异步编程解决方案，语法上，首先可以把它理解成，Generator 函数是一个状态机，封装了多个内部状态。</p><p>执行 Generator 函数会返回一个遍历器对象，也就是说，Generator 函数除了状态机，还是一个遍历器对象生成函数。返回的遍历器对象，可以依次遍历 Generator 函数内部的每一个状态。</p><p>形式上，Generator 函数是一个普通函数，但是有两个特征。一是，function关键字与函数名之间有一个星号；二是，函数体内部使用yield表达式，定义不同的内部状态（yield在英语里的意思就是“产出”）。</p><p>例如：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">"第一次调用"</span>;</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">"第二次调用"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"第三次"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> fn1 = fn()</span><br><span class="line"><span class="built_in">console</span>.log(fn1.next(), <span class="string">''</span>) <span class="comment">//&#123; value: '第一次调用', done: false &#125; ''</span></span><br><span class="line"><span class="built_in">console</span>.log(fn1.next(), <span class="string">''</span>) <span class="comment">//&#123; value: '第二次调用', done: false &#125; ''</span></span><br><span class="line"><span class="built_in">console</span>.log(fn1.next(), <span class="string">''</span>) <span class="comment">//&#123; value: '第三次', done: true &#125; ''</span></span><br><span class="line"><span class="built_in">console</span>.log(fn1.next(), <span class="string">''</span>) <span class="comment">//&#123; value: undefined, done: true &#125; ''</span></span><br></pre></td></tr></table></figure></p><p>第一次调用，Generator 函数开始执行，直到遇到第一个<code>yield</code>表达式为止。<code>next</code>方法返回一个对象，它的<code>value</code>属性就是当前<code>yield</code>表达式的值<code>第一次调用</code>，<code>done</code>属性的值<code>false</code>，表示遍历还没有结束。</p><p>第二次调用，Generator 函数从上次<code>yield</code>表达式停下的地方，一直执行到下一个<code>yield</code>表达式。<code>next</code>方法返回的对象的value属性就是当前<code>yield</code>表达式的值<code>第二次调用</code>，<code>done</code>属性的值<code>false</code>，表示遍历还没有结束。</p><p>第三次调用，Generator 函数从上次<code>yield</code>表达式停下的地方，一直执行到<code>return</code>语句（如果没有<code>return</code>语句，就执行到函数结束）。<code>next</code>方法返回的对象的<code>value</code>属性，就是紧跟在<code>return</code>语句后面的表达式的值（如果没有<code>return</code>语句，则value属性的值为<code>undefined</code>），<code>done</code>属性的值<code>true</code>，表示遍历已经结束。</p><p>第四次调用，此时 Generator 函数已经运行完毕，<code>next</code>方法返回对象的<code>value</code>属性为<code>undefined</code>，<code>done</code>属性为<code>true</code>。以后再调用<code>next</code>方法，返回的都是这个值。</p><p>我们在试一下没有return结果会怎样<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">"第一次调用"</span>;</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">"第二次调用"</span>;</span><br><span class="line">    <span class="comment">// return "第三次"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> fn1 = fn()</span><br><span class="line"><span class="built_in">console</span>.log(fn1.next(), <span class="string">''</span>) <span class="comment">//&#123; value: '第一次调用', done: false &#125; ''</span></span><br><span class="line"><span class="built_in">console</span>.log(fn1.next(), <span class="string">''</span>) <span class="comment">//&#123; value: '第二次调用', done: false &#125; ''</span></span><br><span class="line"><span class="built_in">console</span>.log(fn1.next(), <span class="string">''</span>) <span class="comment">//&#123; value: undefined, done: true &#125; ''</span></span><br><span class="line"><span class="built_in">console</span>.log(fn1.next(), <span class="string">''</span>) <span class="comment">//&#123; value: undefined, done: true &#125; ''</span></span><br></pre></td></tr></table></figure></p><h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3><ul><li><p>当调用<code>Generator</code>函数中有<code>return</code>值的时候 通过<code>next</code>执行到<code>return</code>是返回的时会返回 <code>return</code>的值并且<code>done</code>返回<code>true</code>表示已经执行结束，</p></li><li><p>当调用<code>Generator</code>函数中有<code>return</code>值的时候 通过<code>next</code>执行到最后一个值的时候 <code>done</code>并不会返回<code>true</code>,因为它并不知到当前值为最后一个值，再次调用他会返回一个<code>undefined</code> <code>done</code>返回<code>true</code>表示已经执行结束，但是如果我们通过 <code>done</code>返回作为判断条件的话 有<code>return</code> 会及时停止返回</p></li></ul><h3 id="假设我们想要获取最后一个值"><a href="#假设我们想要获取最后一个值" class="headerlink" title="假设我们想要获取最后一个值"></a>假设我们想要获取最后一个值</h3><p>代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">"第一次调用"</span>;</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">"第二次调用"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"第三次"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> fn1 = fn()</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getNext</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> val= fn1.next()</span><br><span class="line">    <span class="keyword">if</span> (val.done) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(val)<span class="comment">//&#123; value: '第三次', done: true &#125; ''</span></span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">    &#125;</span><br><span class="line">    getNext()</span><br><span class="line">&#125;</span><br><span class="line">getNext()</span><br></pre></td></tr></table></figure><p>没有<code>return</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">"第一次调用"</span>;</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">"第二次调用"</span>;</span><br><span class="line">    <span class="comment">// return "第三次"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> fn1 = fn()</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getNext</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> val= fn1.next()</span><br><span class="line">    <span class="keyword">if</span> (val.done) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(val)<span class="comment">//&#123; value: undefined, done: true &#125; ''</span></span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">    &#125;</span><br><span class="line">    getNext()</span><br><span class="line">&#125;</span><br><span class="line">getNext()</span><br></pre></td></tr></table></figure></p><blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>调用Generator 函数，会返回一个遍历对象，代表 Generator 函数的内部指针,以后，每次调用对象的<code>next</code>方法，就会返回一个带有<code>value</code>和<code>done</code>两个属性的对象。<code>value</code>表示当前内部状态的值，也就是<code>yield</code>后面的表达式例如：<code>yield &quot;第一次调用&quot;;</code>返回<code>yield</code>后面的值;<code>done</code>的属性返回的是一个布尔值，表示便利是否结束</p></blockquote><h2 id="yield表达式"><a href="#yield表达式" class="headerlink" title="yield表达式"></a>yield表达式</h2><p>由于 Generator 函数返回的遍历器对象，只有调用<code>next</code>方法才会遍历下一个内部状态，所以其实提供了一种可以暂停执行的函数。<code>yield</code>表达式就是暂停标志。</p><p>需要注意的是，<code>yield</code>表达式后面的表达式，只有当调用<code>next</code>方法、内部指针指向该语句时才会执行，因此等于为 <code>JavaScript</code> 提供了手动的“<code>惰性求值</code>”（Lazy Evaluation）的语法功能。</p><p>也就是说只有通过手动的<code>next</code>的调用才会去执行返回值 没有<code>next</code>方法调用的话的话就不会被触发</p><p>Generator 函数可以不用yield表达式，这时就变成了一个单纯的暂缓执行函数<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">f</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'执行了！'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> generator = f();</span><br><span class="line">  </span><br><span class="line">  setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    generator.next()</span><br><span class="line">  &#125;, <span class="number">2000</span>);</span><br></pre></td></tr></table></figure></p><h2 id="与-Iterator-接口的关系"><a href="#与-Iterator-接口的关系" class="headerlink" title="与 Iterator 接口的关系"></a>与 Iterator 接口的关系</h2><p>任意一个对象的<code>Symbol.iterator</code>方法，等于该对象的遍历器生成函数，调用该函数会返回该对象的一个遍历器对象。</p><p>由于 Generator 函数就是遍历器生成函数，因此可以把 Generator 赋值给对象的<code>Symbol.iterator</code>属性，从而使得该对象具有 <code>Iterator</code> 接口。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myIterable = &#123;&#125;;</span><br><span class="line">myIterable[<span class="built_in">Symbol</span>.iterator] = <span class="function"><span class="keyword">function</span>* (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">yield</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">yield</span> <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">yield</span> <span class="number">3</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> iterator <span class="keyword">of</span> myIterable) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(iterator)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 3</span></span><br></pre></td></tr></table></figure></p><p>上面代码中，Generator 函数赋值给<code>Symbol.iterator</code>属性，从而使得<code>myIterable</code>对象具有了 <code>Iterator</code> 接口，可以被遍历了。</p><h2 id="next-方法的参数"><a href="#next-方法的参数" class="headerlink" title="next 方法的参数"></a>next 方法的参数</h2><p><code>yield</code>表达式本身没有返回值，或者说总是返回<code>undefined</code>。<code>next</code>方法可以带一个参数，该参数就会被当作上一个<code>yield</code>表达式的返回值。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">fn</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">yield</span> (x+<span class="number">8</span>)</span><br><span class="line"><span class="keyword">var</span> b = <span class="keyword">yield</span> (a/<span class="number">2</span>)</span><br><span class="line"><span class="keyword">return</span> (x + a + b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> fn1 = fn(<span class="number">8</span>)</span><br><span class="line"><span class="built_in">console</span>.log(fn1.next(), <span class="string">''</span>)<span class="comment">// &#123; value: 16, done: false &#125; ''</span></span><br><span class="line"><span class="built_in">console</span>.log(fn1.next(<span class="number">8</span>), <span class="string">''</span>)<span class="comment">// &#123; value: 4, done: false &#125; ''</span></span><br><span class="line"><span class="built_in">console</span>.log(fn1.next(<span class="number">8</span>), <span class="string">''</span>)<span class="comment">// &#123; value: 24, done: true &#125; '</span></span><br></pre></td></tr></table></figure></p><h2 id="异步任务的封装"><a href="#异步任务的封装" class="headerlink" title="异步任务的封装"></a>异步任务的封装</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入模块</span></span><br><span class="line"><span class="keyword">var</span> fetch = <span class="built_in">require</span>(<span class="string">'node-fetch'</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">gen</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> url = <span class="string">'https://api.github.com/users/github'</span>;</span><br><span class="line">  <span class="keyword">var</span> result = <span class="keyword">yield</span> fetch(url);</span><br><span class="line">   <span class="keyword">yield</span> result.bio</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> g = gen();</span><br><span class="line"><span class="keyword">var</span> result = g.next();</span><br><span class="line">result.value.then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> data.json();</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  g.next(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Generator函数&quot;&gt;&lt;a href=&quot;#Generator函数&quot; class=&quot;headerlink&quot; title=&quot;Generator函数&quot;&gt;&lt;/a&gt;Generator函数&lt;/h1&gt;&lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;
      
    
    </summary>
    
    
      <category term="es6" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/es6/"/>
    
      <category term="异步" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/%E5%BC%82%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>如何监听一个对象的变化</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/02/24/%E5%A6%82%E4%BD%95%E7%9B%91%E5%90%AC%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8F%98%E5%8C%96/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/02/24/如何监听一个对象的变化/</id>
    <published>2019-02-24T11:25:04.000Z</published>
    <updated>2019-02-24T11:26:44.258Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何监听一个对象的变化"><a href="#如何监听一个对象的变化" class="headerlink" title="如何监听一个对象的变化"></a>如何监听一个对象的变化</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        </span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> data = &#123;</span></span><br><span class="line"><span class="undefined">            user: &#123;</span></span><br><span class="line"><span class="javascript">                name: <span class="string">"liangshaofeng"</span>,</span></span><br><span class="line"><span class="javascript">                age: <span class="string">"24"</span></span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">            address: &#123;</span></span><br><span class="line"><span class="javascript">                city: <span class="string">"beijing"</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="javascript">        <span class="class"><span class="keyword">class</span> <span class="title">Observer</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">constructor</span>(props) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.data = props</span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.walk(data)</span></span><br><span class="line"><span class="javascript">                <span class="comment">// return data</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//递归</span></span></span><br><span class="line"><span class="undefined">            walk(obj) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> val;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> obj) &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (obj.hasOwnProperty(key)) &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                        val = obj[key]</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">if</span> (<span class="built_in">String</span>.prototype.slice.call(val) == <span class="string">"[object Object]"</span>) &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                            <span class="keyword">this</span>.walk(val)</span></span><br><span class="line"><span class="undefined">                            </span></span><br><span class="line"><span class="undefined">                        &#125;</span></span><br><span class="line"><span class="undefined">                        </span></span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>.convert(key, val)</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">            convert(key, val) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">Object</span>.defineProperty(<span class="keyword">this</span>.data, key, &#123;</span></span><br><span class="line"><span class="javascript">                    enumerable: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">                    configurable: <span class="literal">true</span>,</span></span><br><span class="line"><span class="undefined">                    get() &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="string">'你访问了'</span> + key)</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> val</span></span><br><span class="line"><span class="undefined">                    &#125;,</span></span><br><span class="line"><span class="undefined">                    set(newVal) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="string">"你改变了"</span> + key)</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="string">"你改变了新值"</span> + newVal)</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">if</span> (newVal === val) <span class="keyword">return</span>;</span></span><br><span class="line"><span class="undefined">                        val = newVal</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        </span></span><br><span class="line"><span class="javascript">       <span class="keyword">new</span> Observer(data)</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(data)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>参考地址：<a href="https://github.com/youngwind/blog/issues/84" target="_blank" rel="noopener">https://github.com/youngwind/blog/issues/84</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;如何监听一个对象的变化&quot;&gt;&lt;a href=&quot;#如何监听一个对象的变化&quot; class=&quot;headerlink&quot; title=&quot;如何监听一个对象的变化&quot;&gt;&lt;/a&gt;如何监听一个对象的变化&lt;/h1&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table
      
    
    </summary>
    
    
      <category term="vue" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/vue/"/>
    
      <category term="学习" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>浅谈Object.defineProperty</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/02/22/%E6%B5%85%E8%B0%88Object-defineProperty/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/02/22/浅谈Object-defineProperty/</id>
    <published>2019-02-22T12:31:33.000Z</published>
    <updated>2019-02-22T14:35:23.435Z</updated>
    
    <content type="html"><![CDATA[<h1 id="浅谈Object-defineProperty"><a href="#浅谈Object-defineProperty" class="headerlink" title="浅谈Object.defineProperty"></a>浅谈Object.defineProperty</h1><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><ul><li>obj：必需。目标对象 </li><li>prop：必需。需定义或修改的属性的名字</li><li>descriptor：必需。目标属性所拥有的特性</li></ul><h3 id="descriptor中的参数"><a href="#descriptor中的参数" class="headerlink" title="descriptor中的参数"></a>descriptor中的参数</h3><ul><li>Configurable:表示能否通过delete删除属性从而重新定义属性；</li><li>Enumerable：表示能否通过for-in循环返回属性</li><li>writable：表示能否修改属性的值</li><li>Value：包含这个属性的数据值</li><li>get：读取属性值执行的内置函数</li><li>set：更改属性值执行的内置函数更改后的<code>参数</code>会在形参中<h2 id="Configurable"><a href="#Configurable" class="headerlink" title="Configurable"></a>Configurable</h2></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">a</span>:<span class="number">1</span>&#125;</span><br><span class="line">       <span class="built_in">Object</span>.defineProperty(obj,<span class="string">"a"</span>,&#123;</span><br><span class="line">           configurable:<span class="literal">true</span></span><br><span class="line">       &#125;)</span><br><span class="line">       <span class="keyword">delete</span> obj.a</span><br><span class="line">       <span class="built_in">console</span>.log(obj)<span class="comment">//&#123;&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">a</span>:<span class="number">1</span>&#125;</span><br><span class="line">       <span class="built_in">Object</span>.defineProperty(obj,<span class="string">"a"</span>,&#123;</span><br><span class="line">           configurable:<span class="literal">false</span></span><br><span class="line">       &#125;)  </span><br><span class="line">        <span class="keyword">delete</span> obj.a</span><br><span class="line">       <span class="built_in">console</span>.log(obj)<span class="comment">//&#123;a:1&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;&#125;</span><br><span class="line"><span class="comment">//第一种情况：configurable设置为false，不能再次修改特性。</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(obj,<span class="string">"a"</span>,&#123;</span><br><span class="line">    value:<span class="string">"hello"</span>,</span><br><span class="line">    writable:<span class="literal">false</span>,</span><br><span class="line">    enumerable:<span class="literal">false</span>,</span><br><span class="line">    configurable:<span class="literal">false</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//重新修改特性</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(obj,<span class="string">"a"</span>,&#123;</span><br><span class="line">    value:<span class="string">"hello"</span>,</span><br><span class="line">    writable:<span class="literal">true</span>,</span><br><span class="line">    enumerable:<span class="literal">true</span>,</span><br><span class="line">    configurable:<span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log( obj.a ); <span class="comment">//报错：Uncaught TypeError: Cannot redefine property: a</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第二种情况：configurable设置为true，可以再次修改特性。</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(obj,<span class="string">"a"</span>,&#123;</span><br><span class="line">    value:<span class="string">"hello"</span>,</span><br><span class="line">    writable:<span class="literal">false</span>,</span><br><span class="line">    enumerable:<span class="literal">false</span>,</span><br><span class="line">    configurable:<span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//重新修改特性</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(obj,<span class="string">"a"</span>,&#123;</span><br><span class="line">    value:<span class="string">"hello"</span>,</span><br><span class="line">    writable:<span class="literal">true</span>,</span><br><span class="line">    enumerable:<span class="literal">true</span>,</span><br><span class="line">    configurable:<span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log( obj.a ); <span class="comment">//hello</span></span><br></pre></td></tr></table></figure><h2 id="Enumerable"><a href="#Enumerable" class="headerlink" title="Enumerable"></a>Enumerable</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">a</span>:<span class="number">1</span>,<span class="attr">b</span>:<span class="number">2</span>&#125;</span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(obj,<span class="string">"a"</span>,&#123;</span><br><span class="line">            enumerable:<span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">            <span class="keyword">if</span> (obj.hasOwnProperty(key)) &#123;</span><br><span class="line">                <span class="keyword">const</span> element = obj[key];</span><br><span class="line">                <span class="built_in">console</span>.log(key) <span class="comment">// a b</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">a</span>:<span class="number">1</span>,<span class="attr">b</span>:<span class="number">2</span>&#125;</span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(obj,<span class="string">"a"</span>,&#123;</span><br><span class="line">            enumerable:<span class="literal">false</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">            <span class="keyword">if</span> (obj.hasOwnProperty(key)) &#123;</span><br><span class="line">                <span class="keyword">const</span> element = obj[key];</span><br><span class="line">                <span class="built_in">console</span>.log(key) <span class="comment">// b</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="writable"><a href="#writable" class="headerlink" title="writable"></a>writable</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">a</span>:<span class="number">1</span>&#125;</span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(obj,<span class="string">"a"</span>,&#123;</span><br><span class="line">            writable:<span class="literal">false</span></span><br><span class="line">        &#125;)</span><br><span class="line">      obj.a=<span class="number">3</span></span><br><span class="line">      <span class="built_in">console</span>.log(obj)<span class="comment">//&#123;a:1&#125;</span></span><br></pre></td></tr></table></figure><h2 id="存取器描述"><a href="#存取器描述" class="headerlink" title="存取器描述"></a>存取器描述</h2><p>当使用存取器描述属性的特性的时候，允许设置以下特性属性：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line"><span class="built_in">Object</span>.defineProperty(obj,<span class="string">"a"</span>,&#123;</span><br><span class="line">    get:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;&#125; | <span class="literal">undefined</span>,</span><br><span class="line">    set:<span class="function"><span class="keyword">function</span> (<span class="params">value</span>)</span>&#123;&#125; | <span class="literal">undefined</span></span><br><span class="line">    configurable: <span class="literal">true</span> | <span class="literal">false</span></span><br><span class="line">    enumerable: <span class="literal">true</span> | <span class="literal">false</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>注意：当使用了getter或setter方法，不允许使用writable和value这两个属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> initValue = <span class="string">'hello'</span>;</span><br><span class="line"><span class="built_in">Object</span>.defineProperty(obj,<span class="string">"a"</span>,&#123;</span><br><span class="line">    get:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//当获取值的时候触发的函数</span></span><br><span class="line">        <span class="keyword">return</span> initValue;    </span><br><span class="line">    &#125;,</span><br><span class="line">    set:<span class="function"><span class="keyword">function</span> (<span class="params">value</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//当设置值的时候触发的函数,设置的新值通过参数value拿到</span></span><br><span class="line">        initValue = value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//获取值</span></span><br><span class="line"><span class="built_in">console</span>.log( obj.a );  <span class="comment">//hello</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置值</span></span><br><span class="line">obj.a = <span class="string">'change value'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log( obj.a ); <span class="comment">//change value</span></span><br></pre></td></tr></table></figure><p>注意：get或set不是必须成对出现，任写其一就可以。如果不设置方法，则get和set的默认值为undefined</p><p>参考：<a href="https://segmentfault.com/a/1190000007434923" target="_blank" rel="noopener">https://segmentfault.com/a/1190000007434923</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;浅谈Object-defineProperty&quot;&gt;&lt;a href=&quot;#浅谈Object-defineProperty&quot; class=&quot;headerlink&quot; title=&quot;浅谈Object.defineProperty&quot;&gt;&lt;/a&gt;浅谈Object.definePr
      
    
    </summary>
    
    
      <category term="js" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/js/"/>
    
      <category term="defineProperty" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/defineProperty/"/>
    
  </entry>
  
  <entry>
    <title>vue组件递归实现左侧菜单导航树</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/02/14/vue%E7%BB%84%E4%BB%B6%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E5%B7%A6%E4%BE%A7%E8%8F%9C%E5%8D%95%E5%AF%BC%E8%88%AA%E6%A0%91/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/02/14/vue组件递归实现左侧菜单导航树/</id>
    <published>2019-02-14T03:55:18.000Z</published>
    <updated>2019-02-14T07:20:53.097Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue组件递归实现左侧菜单导航树"><a href="#vue组件递归实现左侧菜单导航树" class="headerlink" title="vue组件递归实现左侧菜单导航树"></a>vue组件递归实现左侧菜单导航树</h1><h2 id="这里使用的是-vue-cli-的webpack打包工具"><a href="#这里使用的是-vue-cli-的webpack打包工具" class="headerlink" title="这里使用的是 vue-cli 的webpack打包工具"></a>这里使用的是 vue-cli 的webpack打包工具</h2><h2 id="首先准备好我们符合递归条件的数据"><a href="#首先准备好我们符合递归条件的数据" class="headerlink" title="首先准备好我们符合递归条件的数据"></a>首先准备好我们符合递归条件的数据</h2><p>./build/mack/data.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"第一层"</span>,</span><br><span class="line">    <span class="attr">"children"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"第二层"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"第二层"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"第二层"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"第一层"</span>,</span><br><span class="line">    <span class="attr">"children"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"第二层"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"第二层"</span>,</span><br><span class="line">        <span class="attr">"children"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"第三层"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"第三层"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"第三层"</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"第二层"</span>,</span><br><span class="line">        <span class="attr">"children"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"第三层"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"第三层"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"第三层"</span>,</span><br><span class="line">            <span class="attr">"children"</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"第四层"</span></span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"第四层"</span></span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"第四层"</span>,</span><br><span class="line">                <span class="attr">"children"</span>: [</span><br><span class="line">                  &#123;</span><br><span class="line">                    <span class="attr">"name"</span>: <span class="string">"第五层"</span></span><br><span class="line">                  &#125;,</span><br><span class="line">                  &#123;</span><br><span class="line">                    <span class="attr">"name"</span>: <span class="string">"第五层"</span></span><br><span class="line">                  &#125;,</span><br><span class="line">                  &#123;</span><br><span class="line">                    <span class="attr">"name"</span>: <span class="string">"第五层"</span></span><br><span class="line">                  &#125;</span><br><span class="line">                ]</span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="创建接口"><a href="#创建接口" class="headerlink" title="创建接口"></a>创建接口</h2><p>./webpack.dev.conf.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123;</span><br><span class="line">    ...</span><br><span class="line">    before: <span class="built_in">require</span>(<span class="string">'./mock/index'</span>)</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>./mock/index</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> data = <span class="built_in">require</span>(<span class="string">'./data'</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> (<span class="params">app</span>) </span>&#123;</span><br><span class="line">  app.get(<span class="string">'/data'</span>, (<span class="built_in">require</span>, result) =&gt; &#123;</span><br><span class="line">    result.send(data)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单封装 fetch工具<br>./src/api.js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span> (<span class="params">url</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> fetch(url).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> res.json()</span><br><span class="line">  &#125;).then(<span class="function"><span class="params">data</span> =&gt;</span> data)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>封装组建</p><p>./src/components/accordion.vue</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"show"</span>&gt;</span><br><span class="line">    &lt;ul v-<span class="keyword">for</span>=<span class="string">"(item,index) in data"</span> :key=<span class="string">"index"</span>&gt;</span><br><span class="line">      &lt;li @click=<span class="string">"showhd(index,$event)"</span> :<span class="class"><span class="keyword">class</span></span>=<span class="string">"[item.children?'color':'']"</span>&gt;&#123;&#123;item.name&#125;&#125;&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">      &lt;Accordion v-if="item.children" :data="item.children"&gt;&lt;/</span>Accordion&gt;</span><br><span class="line">    &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">  name: 'Accordion',</span></span><br><span class="line"><span class="regexp">  props: ['data'],</span></span><br><span class="line"><span class="regexp">  methods: &#123;</span></span><br><span class="line"><span class="regexp">    showhd (id, e) &#123;</span></span><br><span class="line"><span class="regexp">      const dom = e.target.nextElementSibling</span></span><br><span class="line"><span class="regexp">      if (dom.className === 'show') &#123;</span></span><br><span class="line"><span class="regexp">        dom.className = 'head'</span></span><br><span class="line"><span class="regexp">      &#125; else &#123;</span></span><br><span class="line"><span class="regexp">        dom.className = 'show'</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">  .ul &#123;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .head &#123;</span><br><span class="line">    display: none;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .show &#123;</span><br><span class="line">    display: block;</span><br><span class="line">  &#125;</span><br><span class="line">  .color&#123;</span><br><span class="line">    color: brown;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br></pre></td></tr></table></figure><p>调用组建</p><p>./src/components/HelloWorld.vue</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">    &lt;Accordion :data=<span class="string">"this.data"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">Accordion</span>&gt;</span></span></span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;request&#125; <span class="keyword">from</span> <span class="string">'../api/index'</span></span><br><span class="line"><span class="keyword">import</span> Accordion <span class="keyword">from</span> <span class="string">'./accordion'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  components: &#123;Accordion&#125;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      data: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    request(<span class="string">'/data'</span>).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.data = res</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;style&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure><h2 id="项目地址："><a href="#项目地址：" class="headerlink" title="项目地址："></a>项目地址：</h2><p><a href="https://github.com/wangjinshen/vue.git" target="_blank" rel="noopener">https://github.com/wangjinshen/vue.git</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;vue组件递归实现左侧菜单导航树&quot;&gt;&lt;a href=&quot;#vue组件递归实现左侧菜单导航树&quot; class=&quot;headerlink&quot; title=&quot;vue组件递归实现左侧菜单导航树&quot;&gt;&lt;/a&gt;vue组件递归实现左侧菜单导航树&lt;/h1&gt;&lt;h2 id=&quot;这里使用的是-vu
      
    
    </summary>
    
    
      <category term="vue" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/vue/"/>
    
      <category term="递归" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/%E9%80%92%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>跨域</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/02/14/%E8%B7%A8%E5%9F%9F/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/02/14/跨域/</id>
    <published>2019-02-14T00:45:33.000Z</published>
    <updated>2019-02-14T02:11:22.829Z</updated>
    
    <content type="html"><![CDATA[<h1 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h1><h2 id="什么是跨域为什么要跨域-？"><a href="#什么是跨域为什么要跨域-？" class="headerlink" title="什么是跨域为什么要跨域 ？"></a>什么是跨域为什么要跨域 ？</h2><p>浏览器对于JavaScript的<code>同源策略</code>的限制，例如a.cn不能调用b.js的数据。也是属于对网站的一种保护机制</p><h2 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略:"></a>同源策略:</h2><p>是指</p><ul><li>相同域名</li><li>相同端口</li><li>相同协议</li></ul><h2 id="跨域的三种方式"><a href="#跨域的三种方式" class="headerlink" title="跨域的三种方式"></a>跨域的三种方式</h2><h3 id="cls-服务端跨域-一"><a href="#cls-服务端跨域-一" class="headerlink" title="cls 服务端跨域 一"></a>cls 服务端跨域 一</h3><p>我们先模拟出不符合同源策略的生产环境</p><p>服务端代码</p><p>在这里是在这里是通过gulp起了一个<code>8080</code>的端口<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>)</span><br><span class="line"><span class="keyword">const</span> webserver = <span class="built_in">require</span>(<span class="string">'gulp-webserver'</span>)</span><br><span class="line">gulp.task(<span class="string">"server"</span>, () =&gt; &#123;</span><br><span class="line">    gulp.src(<span class="string">'./'</span>)</span><br><span class="line">        .pipe(webserver(&#123;</span><br><span class="line">            host: <span class="string">"localhost"</span>,</span><br><span class="line">            port: <span class="number">8080</span>,</span><br><span class="line">            middleware(req, res) &#123;</span><br><span class="line">                <span class="keyword">const</span> data = &#123; <span class="attr">name</span>: <span class="string">"neinei"</span>, <span class="attr">age</span>: <span class="number">19</span> &#125;</span><br><span class="line">                res.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">                    <span class="string">'Content-Type'</span>: <span class="string">'application/json;charset=utf-8'</span>,</span><br><span class="line">                &#125;)</span><br><span class="line">                res.end(<span class="built_in">JSON</span>.stringify(data))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>客户端js代码通过gulp起了一个人端口<code>8000</code>的端口<br>然后把<code>html</code>页面返回到浏览器<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>)</span><br><span class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">"gulp"</span>)</span><br><span class="line"><span class="keyword">const</span> webserver = <span class="built_in">require</span>(<span class="string">"gulp-webserver"</span>)</span><br><span class="line"><span class="keyword">let</span> result = fs.readFileSync(<span class="string">"./index.html"</span>, <span class="string">"utf-8"</span>)</span><br><span class="line">gulp.task(<span class="string">"api"</span>, () =&gt; &#123;</span><br><span class="line">    gulp.src(<span class="string">'./'</span>)</span><br><span class="line">        .pipe(webserver(&#123;</span><br><span class="line">            host: <span class="string">"localhost"</span>,</span><br><span class="line">            port: <span class="number">8000</span>,</span><br><span class="line">            middleware(req, res) &#123;</span><br><span class="line">                res.end(result)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>客户端html展示页面代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    this is page</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params">url</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> xml = <span class="keyword">new</span> XMLHttpRequest()</span></span><br><span class="line"><span class="javascript">        xml.open(<span class="string">"GET"</span>, url, <span class="literal">false</span>)</span></span><br><span class="line"><span class="javascript">        xml.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(xml.readyState!=<span class="number">4</span>)<span class="keyword">return</span> <span class="literal">false</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(xml.status===<span class="number">200</span>)&#123;</span></span><br><span class="line"><span class="undefined">                resolve(xml.responseText)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        xml.send()</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">request(<span class="string">'http://localhost:8080'</span>).then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(res)</span></span><br><span class="line"><span class="javascript">&#125;).catch(<span class="function"><span class="params">err</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(err)</span></span><br><span class="line"><span class="undefined">&#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>在这里起了两个服务一个端口为8080一个端口为8000满足了跨域的需求<br>发起ajax试一下<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/20190213200441.png" alt="结果" title="">                </div>                <div class="image-caption">结果</div>            </figure><br>添加语法 <code>&#39;Access-Control-Allow-Origin&#39;: &#39;*&#39;</code><br>服务端代码<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>)</span><br><span class="line"><span class="keyword">const</span> webserver = <span class="built_in">require</span>(<span class="string">'gulp-webserver'</span>)</span><br><span class="line">gulp.task(<span class="string">"server"</span>, () =&gt; &#123;</span><br><span class="line">    gulp.src(<span class="string">'./'</span>)</span><br><span class="line">        .pipe(webserver(&#123;</span><br><span class="line">            host: <span class="string">"localhost"</span>,</span><br><span class="line">            port: <span class="number">8080</span>,</span><br><span class="line">            middleware(req, res) &#123;</span><br><span class="line">                <span class="keyword">const</span> data = &#123; <span class="attr">name</span>: <span class="string">"neinei"</span>, <span class="attr">age</span>: <span class="number">19</span> &#125;</span><br><span class="line">                res.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">                    <span class="string">'Content-Type'</span>: <span class="string">'application/json;charset=utf-8'</span>,</span><br><span class="line">                    <span class="string">'Access-Control-Allow-Credentials'</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="string">'Access-Control-Allow-Origin'</span>: <span class="string">'*'</span></span><br><span class="line">                &#125;)</span><br><span class="line">                res.end(<span class="built_in">JSON</span>.stringify(data))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/20190213201731.png" alt="结果" title="">                </div>                <div class="image-caption">结果</div>            </figure><h3 id="Access-Control-Allow-Origin"><a href="#Access-Control-Allow-Origin" class="headerlink" title="Access-Control-Allow-Origin"></a>Access-Control-Allow-Origin</h3><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin 响应头指定了该响应的资源是否被允许与给定的origin共享</span><br></pre></td></tr></table></figure><blockquote><h4 id=""><a href="#" class="headerlink" title="*"></a><code>*</code></h4><h4 id="对于不需具备凭证（credentials）的请求，服务器会以“-”作为通配符，从而允许所有域都具有访问资源的权限。"><a href="#对于不需具备凭证（credentials）的请求，服务器会以“-”作为通配符，从而允许所有域都具有访问资源的权限。" class="headerlink" title="对于不需具备凭证（credentials）的请求，服务器会以“*”作为通配符，从而允许所有域都具有访问资源的权限。"></a>对于不需具备凭证（credentials）的请求，服务器会以“*”作为通配符，从而允许所有域都具有访问资源的权限。</h4></blockquote><blockquote><h4 id="lt-origin-gt"><a href="#lt-origin-gt" class="headerlink" title="&lt;origin&gt;"></a><code>&lt;origin&gt;</code></h4><h4 id="指定一个可以访问资源的URI。"><a href="#指定一个可以访问资源的URI。" class="headerlink" title="指定一个可以访问资源的URI。"></a>指定一个可以访问资源的URI。</h4></blockquote><h3 id="jsonp跨域-二"><a href="#jsonp跨域-二" class="headerlink" title="jsonp跨域 二"></a>jsonp跨域 二</h3><h4 id="jsonp的原理"><a href="#jsonp的原理" class="headerlink" title="jsonp的原理"></a>jsonp的原理</h4><p>通过<code>html</code>中带有src属性的标签发起请求</p><p><code>src</code>:因为src不受同源策略影响 </p><p>一般使用<code>&lt;script&gt;</code>标签</p><p>在请求路由中带去一个回调函数， 在服务端返回执行。</p><p>就可以在函数中的形参中拿到数据</p><p>服务端代码 端口号 <code>8888</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">var</span> url = <span class="built_in">require</span>(<span class="string">'url'</span>)</span><br><span class="line"><span class="keyword">var</span> data = <span class="built_in">JSON</span>.stringify(&#123; <span class="attr">name</span>: <span class="string">"heihei"</span>, <span class="attr">age</span>: <span class="number">21</span> &#125;)</span><br><span class="line">http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">request, response</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> parse = url.parse(request.url, <span class="literal">true</span>)</span><br><span class="line">    response.writeHead(<span class="number">200</span>, &#123; <span class="string">'Content-Type'</span>: <span class="string">'text/plain'</span> &#125;);</span><br><span class="line">    <span class="keyword">if</span> (parse.query.callback) &#123;</span><br><span class="line">        response.end(parse.query.callback+<span class="string">"("</span>+data+<span class="string">")"</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    response.end(data);</span><br><span class="line">&#125;).listen(<span class="number">8888</span>, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">8888</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>客户端代码 端口<code>8000</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>)</span><br><span class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">"gulp"</span>)</span><br><span class="line"><span class="keyword">const</span> webserver = <span class="built_in">require</span>(<span class="string">"gulp-webserver"</span>)</span><br><span class="line"><span class="keyword">let</span> result = fs.readFileSync(<span class="string">"./index.html"</span>, <span class="string">"utf-8"</span>)</span><br><span class="line">gulp.task(<span class="string">"api"</span>, () =&gt; &#123;</span><br><span class="line">    gulp.src(<span class="string">'./'</span>)</span><br><span class="line">        .pipe(webserver(&#123;</span><br><span class="line">            host: <span class="string">"localhost"</span>,</span><br><span class="line">            port: <span class="number">8000</span>,</span><br><span class="line">            middleware(req, res) &#123;</span><br><span class="line">                res.end(result)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>客户端<code>html</code>代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    this is page</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">cb</span>(<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(data)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>)</span></span><br><span class="line"><span class="javascript">        script.setAttribute(<span class="string">'src'</span>, <span class="string">"http://localhost:8888?callback=cb"</span>)</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.body.appendChild(script)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><ul><li><p>动态创建一个<code>script</code>标签 </p></li><li><p>创建一个函数来接受来接收数据 如上代码 我们创建了一个<code>cb</code>函数</p></li><li><p>设置<code>src</code>属性为我们的接口地址 <code>http://localhost:8888?callback=cb</code></p></li><li><p>通过<code>appendChild</code>方法吧<code>script</code>插入<code>body</code>插入后会自动发起请求</p></li></ul><h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><ul><li>解析客户端传来的参数，通过<code>node</code>模块中的<code>url</code>模块来解析</li></ul><p><code>url.parse</code>：解析前端的请求参数 第二个参数为<code>true</code>时会把参数解析成对象</p><p><code>parse.query</code>：会把参数解析放在parse.query的对象中<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> parse = url.parse(request.url, <span class="literal">true</span>)</span><br></pre></td></tr></table></figure></p><ul><li>判断是否传来<code>callback</code>函数然后通过end返回</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (parse.query.callback) &#123;</span><br><span class="line">       response.end(parse.query.callback+<span class="string">"("</span>+data+<span class="string">")"</span>)</span><br><span class="line">       <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ul><li>服务端的函数接收数据</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cb</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(data)</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h3 id="降域-三"><a href="#降域-三" class="headerlink" title="降域 三"></a>降域 三</h3><p>域名为<a href="http://b.com/b的网页以iframe的形式嵌在域名为http://a.com/a的网页中，它们来自不同的域名，正常情况下不能进行跨域访问。" target="_blank" rel="noopener">http://b.com/b的网页以iframe的形式嵌在域名为http://a.com/a的网页中，它们来自不同的域名，正常情况下不能进行跨域访问。</a></p><p>但是当我们为两个页面都加上这样一句代码：</p><blockquote><h4 id="document-domain-‘wuxiaozhou-com’"><a href="#document-domain-‘wuxiaozhou-com’" class="headerlink" title="document.domain = ‘wuxiaozhou.com’;"></a>document.domain = ‘wuxiaozhou.com’;</h4></blockquote><p>这时候这两个页面就位于同一个域名下面了，就可以在页面a中对页面b进行操作了，两个页面可以互相访问。</p><p>项目地址: <a href="https://github.com/wangjinshen/cross-domain.git" target="_blank" rel="noopener">https://github.com/wangjinshen/cross-domain.git</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;跨域&quot;&gt;&lt;a href=&quot;#跨域&quot; class=&quot;headerlink&quot; title=&quot;跨域&quot;&gt;&lt;/a&gt;跨域&lt;/h1&gt;&lt;h2 id=&quot;什么是跨域为什么要跨域-？&quot;&gt;&lt;a href=&quot;#什么是跨域为什么要跨域-？&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
      <category term="跨域" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>vue-cli支持Typescript</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/02/07/vue-cli%E6%94%AF%E6%8C%81Typescript/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/02/07/vue-cli支持Typescript/</id>
    <published>2019-02-07T04:10:47.000Z</published>
    <updated>2019-02-07T04:18:18.975Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue-cli支持Typescript"><a href="#vue-cli支持Typescript" class="headerlink" title="vue-cli支持Typescript"></a>vue-cli支持Typescript</h1><h2 id="安装typescript及loader"><a href="#安装typescript及loader" class="headerlink" title="安装typescript及loader"></a>安装typescript及loader</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install typescript ts-loader --save-dev</span><br></pre></td></tr></table></figure><h2 id="修改rules"><a href="#修改rules" class="headerlink" title="修改rules"></a>修改rules</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">      test: <span class="regexp">/\.tsx$/</span>,</span><br><span class="line">      exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">      enforce: <span class="string">'pre'</span>,</span><br><span class="line">      loader: <span class="string">'tslint-loader'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      test: <span class="regexp">/\.tsx?$/</span>,</span><br><span class="line">      loader: <span class="string">'ts-loader'</span>,</span><br><span class="line">      exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">      options: &#123;</span><br><span class="line">        appendTsSuffixTo: [<span class="regexp">/\.vue$/</span>],</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h2 id="声明vue模块"><a href="#声明vue模块" class="headerlink" title="声明vue模块"></a>声明vue模块</h2><p>为每个文件声明全局模块.vue，这样每个单文件组件就可以被自动被声明了。<br>在src目录下新建文件 typings/vue.d.ts：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">declare <span class="built_in">module</span> <span class="string">'*.vue'</span> &#123;</span><br><span class="line">  <span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> Vue</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="新建tsconfig-json"><a href="#新建tsconfig-json" class="headerlink" title="新建tsconfig.json"></a>新建tsconfig.json</h2><p>位置 根目录</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"compilerOptions"</span>: &#123;</span><br><span class="line">    <span class="attr">"jsx"</span>: <span class="string">"preserve"</span>,</span><br><span class="line">    <span class="attr">"lib"</span>: [</span><br><span class="line">      <span class="string">"dom"</span>,</span><br><span class="line">      <span class="string">"es5"</span>,</span><br><span class="line">      <span class="string">"es2015"</span>,</span><br><span class="line">      <span class="string">"es2015.promise"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"allowJs"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"module"</span>: <span class="string">"es2015"</span>,</span><br><span class="line">    <span class="attr">"moduleResolution"</span>: <span class="string">"node"</span>,</span><br><span class="line">    <span class="attr">"target"</span>: <span class="string">"es5"</span>,</span><br><span class="line">    <span class="attr">"sourceMap"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"emitDecoratorMetadata"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"experimentalDecorators"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"allowSyntheticDefaultImports"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"isolatedModules"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"declaration"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"noImplicitAny"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"removeComments"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"strictNullChecks"</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"compileOnSave"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="将js改为ts"><a href="#将js改为ts" class="headerlink" title="将js改为ts"></a>将js改为ts</h2><p>将.js后缀改为.ts<br>.vue单文件组间中 script lang =’ts’<br>修改入口文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">entry: &#123;</span><br><span class="line">    app: <span class="string">'./src/main.ts'</span></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;vue-cli支持Typescript&quot;&gt;&lt;a href=&quot;#vue-cli支持Typescript&quot; class=&quot;headerlink&quot; title=&quot;vue-cli支持Typescript&quot;&gt;&lt;/a&gt;vue-cli支持Typescript&lt;/h1&gt;&lt;h2 i
      
    
    </summary>
    
    
      <category term="ts" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/ts/"/>
    
      <category term="vue" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/29/hello-world/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/29/hello-world/</id>
    <published>2019-01-29T13:02:44.197Z</published>
    <updated>2019-01-16T06:47:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="bolg" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/bolg/"/>
    
  </entry>
  
  <entry>
    <title>vue 的一些扩展方法</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/28/vue%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95%E6%96%B9%E6%B3%95/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/28/vue的一些扩展方法/</id>
    <published>2019-01-28T12:21:10.000Z</published>
    <updated>2019-01-29T00:46:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue-的一些扩展的方法"><a href="#vue-的一些扩展的方法" class="headerlink" title="vue 的一些扩展的方法"></a>vue 的一些扩展的方法</h1><h2 id="扩展全局组建"><a href="#扩展全局组建" class="headerlink" title="扩展全局组建"></a>扩展全局组建</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> components=&#123;</span><br><span class="line">    component1,</span><br><span class="line">    component2,</span><br><span class="line">    component3</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> components)&#123;</span><br><span class="line">    Vue.component(key,components[key])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="扩展全局指令"><a href="#扩展全局指令" class="headerlink" title="扩展全局指令"></a>扩展全局指令</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Vue.directive(<span class="string">"option"</span>, &#123;</span><br><span class="line">    inserted(dom, binding) &#123;</span><br><span class="line">        dom.addEventListener(<span class="string">"click"</span>, (e) =&gt; &#123;</span><br><span class="line">            <span class="keyword">const</span> node = e.target</span><br><span class="line">            <span class="keyword">const</span> x = e.pageX</span><br><span class="line">            <span class="keyword">const</span> y = e.pageY</span><br><span class="line">            <span class="built_in">console</span>.log(node, x, y)</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="built_in">console</span>.log(dom, binding)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="扩展-veu-类的方法"><a href="#扩展-veu-类的方法" class="headerlink" title="扩展 veu 类的方法"></a>扩展 veu 类的方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Vue.method=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"扩展了类的方法"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="扩展-vue-原型，在-vue-组件中就可以通过-this-访问调用"><a href="#扩展-vue-原型，在-vue-组件中就可以通过-this-访问调用" class="headerlink" title="扩展 vue 原型，在 vue 组件中就可以通过 this 访问调用"></a>扩展 vue 原型，在 vue 组件中就可以通过 this 访问调用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Vue.proptype.$api= function1()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"调用api"</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;vue-的一些扩展的方法&quot;&gt;&lt;a href=&quot;#vue-的一些扩展的方法&quot; class=&quot;headerlink&quot; title=&quot;vue 的一些扩展的方法&quot;&gt;&lt;/a&gt;vue 的一些扩展的方法&lt;/h1&gt;&lt;h2 id=&quot;扩展全局组建&quot;&gt;&lt;a href=&quot;#扩展全局组建&quot;
      
    
    </summary>
    
    
      <category term="vue" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Vuex 的 Holle world</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/28/vuex/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/28/vuex/</id>
    <published>2019-01-28T03:48:50.000Z</published>
    <updated>2019-01-28T05:59:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vuex-的-Holle-world"><a href="#Vuex-的-Holle-world" class="headerlink" title="Vuex 的 Holle world"></a>Vuex 的 Holle world</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install Vuex --save-dev</span><br></pre></td></tr></table></figure><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入包</span></span><br><span class="line"><span class="keyword">import</span>  Vue  <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">"vuex"</span></span><br><span class="line">Vue.use(Vuex)<span class="comment">//挂载到全局</span></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">    <span class="comment">//全局状态</span></span><br><span class="line">    state: &#123;</span><br><span class="line">        count: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//改变仓库的方法集合</span></span><br><span class="line">    mutations: &#123;</span><br><span class="line">        <span class="comment">//改变仓库的方法</span></span><br><span class="line">        plas(state) &#123;</span><br><span class="line">            state.count++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br></pre></td></tr></table></figure><p>入口文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//挂载到vue</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">"#app"</span>,</span><br><span class="line">    render: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">    router,</span><br><span class="line">    store,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;button @click=<span class="string">"plas"</span> type=<span class="string">"button"</span>&gt;+<span class="xml"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    &#123;&#123;count&#125;&#125;</span><br><span class="line">    &lt;button type=<span class="string">"button"</span>&gt;-<span class="xml"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  computed: &#123;</span><br><span class="line">    count() &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.$store.state.count;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">      plas()&#123;</span><br><span class="line">          <span class="comment">//通过commit方法执行plas函数</span></span><br><span class="line">          <span class="keyword">this</span>.$store.commit(<span class="string">"plas"</span>)</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;style scoped lang=""&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Vuex-的-Holle-world&quot;&gt;&lt;a href=&quot;#Vuex-的-Holle-world&quot; class=&quot;headerlink&quot; title=&quot;Vuex 的 Holle world&quot;&gt;&lt;/a&gt;Vuex 的 Holle world&lt;/h1&gt;&lt;h2 id=&quot;安
      
    
    </summary>
    
    
      <category term="vue" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/vue/"/>
    
      <category term="vuex" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/vuex/"/>
    
  </entry>
  
  <entry>
    <title>http-equiv</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/26/http-equiv/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/26/http-equiv/</id>
    <published>2019-01-26T03:08:12.000Z</published>
    <updated>2019-01-26T03:17:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h2><p>相当于 http 的文件头作用，它可以向浏览器传回一些有用的信息，以帮助正确和精确地显示网页内容，与之对应的属性值为 content, content 中的内容其实就是各个参数的变量值。</p><h2 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">metahttp-equiv="参数"content="参数变量值"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="参数："><a href="#参数：" class="headerlink" title="参数："></a>参数：</h2><ul><li>x-UA-Compatible<br>说明：指定网页兼容性<br>代码：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Praqma:<br>说明：是用于设定禁止浏览器从本地机的缓存中调阅页面内容，设定后一旦离开网页就无法从 Cache 中再调出<br>代码：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Window-target<br>说明：强制页面在当前窗口以独立页面显示。<br>代码：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Window-target"</span> <span class="attr">content</span>=<span class="string">"top"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Keywords:<br>说明：搜索引擎关键字。<br>代码：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"keyword1, keyword2, keyword3"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>cache-control<br>说明：清除缓存。<br>代码：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"cache-control"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>description<br>说明：强制页面在当前窗口以独立页面显示。<br>代码：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"This is my websit"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Window-target:<br>说明：强制页面在当前窗口以独立页面显示。<br>代码：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Window-target"</span> <span class="attr">content</span>=<span class="string">"top"</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;概念：&quot;&gt;&lt;a href=&quot;#概念：&quot; class=&quot;headerlink&quot; title=&quot;概念：&quot;&gt;&lt;/a&gt;概念：&lt;/h2&gt;&lt;p&gt;相当于 http 的文件头作用，它可以向浏览器传回一些有用的信息，以帮助正确和精确地显示网页内容，与之对应的属性值为 content
      
    
    </summary>
    
    
      <category term="http-equiv" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/http-equiv/"/>
    
  </entry>
  
  <entry>
    <title>viewport</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/26/viewport/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/26/viewport/</id>
    <published>2019-01-26T03:05:30.000Z</published>
    <updated>2019-01-26T03:23:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h2><p>移动设备上的 viewport 就是设备的屏幕上能用来显示我们的网页的那一块区域</p><h2 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"params1,params2"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="参数："><a href="#参数：" class="headerlink" title="参数："></a>参数：</h2><ul><li>width：<br>说明：控制视口的宽度，可以指定一个值也可以是一个特殊值<br>代码：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=value"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>height：<br>说明：控制视口的高度，可以指定一个值也可以是一个特殊值<br>代码：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"height=value"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>initial-scale：<br>说明：页面初始缩放程度，这是一个浮点值，是页面大小的一个乘数。<br>代码：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span><span class="attr">content</span>=<span class="string">"initial-scale=1"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>user-scalable：<br>说明：用户调整缩放，布尔值。<br>代码：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">metaname="viewport"content="initial-scale=1,maximum-scale=1,user-scalable=no,width=device-width"</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;概念：&quot;&gt;&lt;a href=&quot;#概念：&quot; class=&quot;headerlink&quot; title=&quot;概念：&quot;&gt;&lt;/a&gt;概念：&lt;/h2&gt;&lt;p&gt;移动设备上的 viewport 就是设备的屏幕上能用来显示我们的网页的那一块区域&lt;/p&gt;
&lt;h2 id=&quot;语法：&quot;&gt;&lt;a href=
      
    
    </summary>
    
    
      <category term="viewport" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/viewport/"/>
    
  </entry>
  
  <entry>
    <title>webpack- 入门</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/24/webpack-%E5%85%A5%E9%97%A8/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/24/webpack-入门/</id>
    <published>2019-01-24T05:40:09.000Z</published>
    <updated>2019-02-03T04:44:47.224Z</updated>
    
    <content type="html"><![CDATA[<h1 id="webpack-入门"><a href="#webpack-入门" class="headerlink" title="webpack 入门"></a>webpack 入门</h1><h2 id="安装-webpack-和-webpack-cli"><a href="#安装-webpack-和-webpack-cli" class="headerlink" title="安装 webpack 和 webpack-cli"></a>安装 webpack 和 webpack-cli</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install webpack -g</span><br><span class="line">npm install webpack-cli -g</span><br></pre></td></tr></table></figure><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="img/webpacklist.png" alt="目录结构" title="">                </div>                <div class="image-caption">目录结构</div>            </figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">"path"</span>)<span class="comment">//node中操作路径的内置包</span></span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">"webpack"</span>)<span class="comment">//引入webpack</span></span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">"html-webpack-plugin"</span>)<span class="comment">//引入html-webpack-plugin</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">//mode 有两个参数 development本地开发 模式  production生产模式</span></span><br><span class="line">    mode: <span class="string">"development"</span>,</span><br><span class="line">    <span class="comment">//entry入口</span></span><br><span class="line">    entry: &#123;</span><br><span class="line">        <span class="comment">//入口文件路径</span></span><br><span class="line">        <span class="comment">//process.cwd()返回的是当前Node.js进程执行时的工作目录</span></span><br><span class="line">        mian: path.join(process.cwd(), <span class="string">"src/mian.js"</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//output出口</span></span><br><span class="line">    output: &#123;</span><br><span class="line">        <span class="comment">//path 输出路径</span></span><br><span class="line">        <span class="comment">//dist输出文件没有自动创建</span></span><br><span class="line">        path: path.join(process.cwd(), <span class="string">"dist"</span>),</span><br><span class="line">        <span class="comment">//文件名</span></span><br><span class="line">        filename: <span class="string">"[name].js"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//模块</span></span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        <span class="comment">//设定规则</span></span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//正则判断文件后缀再用对应得解析器解析</span></span><br><span class="line">                test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">                <span class="comment">//解析 从后向前执行  解析css后缀 在以style解析展示</span></span><br><span class="line">                loader: [ <span class="string">"style-loader"</span>,<span class="string">"css-loader"</span>]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.scss$/</span>,</span><br><span class="line">                use: [</span><br><span class="line">                    <span class="string">"style-loader"</span>,</span><br><span class="line">                    <span class="string">"css-loader"</span>,</span><br><span class="line">                    <span class="string">"sass-loader"</span></span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.(png|jpg|gif)$/i</span>,</span><br><span class="line">                loader: [<span class="string">'url-loader'</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//配置别名</span></span><br><span class="line">     resolve: &#123;</span><br><span class="line">         </span><br><span class="line">        alias: &#123;</span><br><span class="line">            $vue: <span class="string">"vue/dist/vue.js"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//本地服务</span></span><br><span class="line">    <span class="comment">//要下载依赖  webpack-dev-server</span></span><br><span class="line">    devServer: &#123;</span><br><span class="line">        <span class="comment">//自动打开浏览器</span></span><br><span class="line">        open: <span class="literal">true</span>,</span><br><span class="line">        <span class="comment">//热服务</span></span><br><span class="line">        hot: <span class="literal">true</span>,</span><br><span class="line">        <span class="comment">//主机</span></span><br><span class="line">        host: <span class="string">'localhost'</span>,</span><br><span class="line">        <span class="comment">//端口</span></span><br><span class="line">        port: <span class="number">8080</span>,</span><br><span class="line">        <span class="comment">//配置接口</span></span><br><span class="line">        before(app) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">//插件</span></span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="comment">//HotModuleReplacementPlugin webpack内置插件一般和devserver配合使用</span></span><br><span class="line">        <span class="keyword">new</span> webpack.HotModuleReplacementPlugin(),</span><br><span class="line">        <span class="comment">//拷贝展示页面index 并且把打包后的静态资源引入</span></span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            <span class="comment">//inject</span></span><br><span class="line">            <span class="comment">// true 默认值，script标签位于html文件的 body 底部</span></span><br><span class="line">            <span class="comment">// body script标签位于html文件的 body 底部</span></span><br><span class="line">            <span class="comment">// head script标签位于html文件的 head中</span></span><br><span class="line">            <span class="comment">// false 不插入生成的js文件，这个几乎不会用到的</span></span><br><span class="line">            inject: <span class="string">"body"</span>,</span><br><span class="line">            filename: <span class="string">"index.html"</span>,<span class="comment">//就是html文件的文件名，默认是index.html</span></span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="常用包"><a href="#常用包" class="headerlink" title="常用包"></a>常用包</h2><ul><li><code>webpack-merge</code> 与<code>Object.assign</code>类似,主要作用用于抽离合并</li><li><code>extract-text-webpack-plugin</code>该插件的主要是为了抽离css样式,防止将样式打包在js中引起页面样式加载错乱的现象;</li><li>cross-env  设置<code>NODE_ENV</code>常量</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;webpack-入门&quot;&gt;&lt;a href=&quot;#webpack-入门&quot; class=&quot;headerlink&quot; title=&quot;webpack 入门&quot;&gt;&lt;/a&gt;webpack 入门&lt;/h1&gt;&lt;h2 id=&quot;安装-webpack-和-webpack-cli&quot;&gt;&lt;a href
      
    
    </summary>
    
    
      <category term="webpack" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>优质博文</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/23/%E4%BC%98%E8%B4%A8%E5%8D%9A%E6%96%87/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/23/优质博文/</id>
    <published>2019-01-23T03:49:48.000Z</published>
    <updated>2019-01-23T06:38:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="优质博文"><a href="#优质博文" class="headerlink" title="优质博文"></a>优质博文</h1><ul><li><p>Node.js安装及环境配置之Windows篇:<a href="https://www.cnblogs.com/zhouyu2017/p/6485265.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhouyu2017/p/6485265.html</a></p></li><li><p>mysql server 5.0 安装步骤详解:<a href="https://jingyan.baidu.com/article/cbcede0770cab802f50b4d4a.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/cbcede0770cab802f50b4d4a.html</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;优质博文&quot;&gt;&lt;a href=&quot;#优质博文&quot; class=&quot;headerlink&quot; title=&quot;优质博文&quot;&gt;&lt;/a&gt;优质博文&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Node.js安装及环境配置之Windows篇:&lt;a href=&quot;https://www.cnblogs.
      
    
    </summary>
    
    
      <category term="学习" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="工具" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>杂项</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/23/%E6%9D%82%E9%A1%B9/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/23/杂项/</id>
    <published>2019-01-23T01:36:30.000Z</published>
    <updated>2019-01-23T03:44:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="VMware-虚拟机"><a href="#VMware-虚拟机" class="headerlink" title="VMware  虚拟机"></a>VMware  虚拟机</h1><h1 id="bios"><a href="#bios" class="headerlink" title="bios"></a>bios</h1><p>计算机领域，BIOS 是 “Basic Input Output System”的缩略语，译为”基本输入输出系统”， [1]  与前者读法相同。计算机在运行时，首先会进入 BIOS，它在计算机系统中起着非常重要的作用。一块主板性能优越与否，很大程度上取决于主板上的 BIOS 管理功能是否先进。</p><h1 id="常用-cmd-命令"><a href="#常用-cmd-命令" class="headerlink" title="常用 cmd 命令"></a>常用 cmd 命令</h1><h2 id="mstsc-链接远程桌面"><a href="#mstsc-链接远程桌面" class="headerlink" title="mstsc 链接远程桌面"></a>mstsc 链接远程桌面</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;VMware-虚拟机&quot;&gt;&lt;a href=&quot;#VMware-虚拟机&quot; class=&quot;headerlink&quot; title=&quot;VMware  虚拟机&quot;&gt;&lt;/a&gt;VMware  虚拟机&lt;/h1&gt;&lt;h1 id=&quot;bios&quot;&gt;&lt;a href=&quot;#bios&quot; class=&quot;he
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>seo工具</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/22/seo%E5%B7%A5%E5%85%B7/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/22/seo工具/</id>
    <published>2019-01-22T11:06:55.000Z</published>
    <updated>2019-01-22T11:40:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SEO-工具"><a href="#SEO-工具" class="headerlink" title="SEO 工具"></a>SEO 工具</h1><h2 id="最我网"><a href="#最我网" class="headerlink" title="最我网"></a>最我网</h2><p>网址: <a href="http://www.zui5.com" target="_blank" rel="noopener">http://www.zui5.com</a></p><h2 id="包含工具"><a href="#包含工具" class="headerlink" title="包含工具"></a>包含工具</h2><ul><li>Alexa</li><li>SEO外链代发工具</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;SEO-工具&quot;&gt;&lt;a href=&quot;#SEO-工具&quot; class=&quot;headerlink&quot; title=&quot;SEO 工具&quot;&gt;&lt;/a&gt;SEO 工具&lt;/h1&gt;&lt;h2 id=&quot;最我网&quot;&gt;&lt;a href=&quot;#最我网&quot; class=&quot;headerlink&quot; title=&quot;最我网
      
    
    </summary>
    
    
      <category term="seo" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/seo/"/>
    
  </entry>
  
  <entry>
    <title>拖动 -position</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/22/%E6%8B%96%E5%8A%A8-position/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/22/拖动-position/</id>
    <published>2019-01-22T08:15:31.000Z</published>
    <updated>2019-01-22T11:06:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于一些拖动的小-demo"><a href="#关于一些拖动的小-demo" class="headerlink" title="关于一些拖动的小 demo"></a>关于一些拖动的小 demo</h1><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><h3 id="先上-demo"><a href="#先上-demo" class="headerlink" title="先上 demo"></a>先上 demo</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/style.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        .box &#123;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">            background: red;</span></span><br><span class="line"><span class="undefined">            position: fixed;</span></span><br><span class="line"><span class="undefined">            position: relative;</span></span><br><span class="line"><span class="undefined">            top: 20px;</span></span><br><span class="line"><span class="undefined">            left: 20px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        .rightBottom,</span></span><br><span class="line"><span class="undefined">        .left &#123;</span></span><br><span class="line"><span class="undefined">            width: 20px;</span></span><br><span class="line"><span class="undefined">            height: 20px;</span></span><br><span class="line"><span class="undefined">            background: rgba(89, 98, 89, .8);</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="undefined">            top: 50%;</span></span><br><span class="line"><span class="undefined">            right: 0;</span></span><br><span class="line"><span class="undefined">            transform: translate(50%, -50%);</span></span><br><span class="line"><span class="undefined">            border-radius: 50%;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        .rightBottom &#123;</span></span><br><span class="line"><span class="undefined">            top: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"rightBottom"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">dom</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="built_in">document</span>.querySelector(dom);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">".box"</span>).onmousedown = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined">            e.stopPropagation();</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> X = e.offsetX,</span></span><br><span class="line"><span class="undefined">                Y = e.offsetY</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                e.target.style.left = e.pageX - X + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="javascript">                e.target.style.top = e.pageY - Y + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmousemove = <span class="literal">null</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">".left"</span>).onmousedown = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined">            e.preventDefault();</span></span><br><span class="line"><span class="undefined">            e.stopPropagation();</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> originX = e.pageX,</span></span><br><span class="line"><span class="javascript">                width = $(<span class="string">".box"</span>).offsetWidth;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".box"</span>).style.width = width + e.pageX - originX + <span class="string">"px"</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmousemove = <span class="literal">null</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">".rightBottom"</span>).onmousedown = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined">            e.stopPropagation();</span></span><br><span class="line"><span class="undefined">            e.preventDefault();</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> originX = e.pageX,</span></span><br><span class="line"><span class="undefined">                originY = e.pageY,</span></span><br><span class="line"><span class="javascript">                width = $(<span class="string">".box"</span>).offsetWidth,</span></span><br><span class="line"><span class="javascript">                height = $(<span class="string">".box"</span>).offsetHeight;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".box"</span>).style.width = width + e.pageX - originX + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".box"</span>).style.height = height + e.pageY - originY + <span class="string">"px"</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmousemove = <span class="literal">null</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="通过事件拿到位置信息的-API"><a href="#通过事件拿到位置信息的-API" class="headerlink" title="通过事件拿到位置信息的 API"></a>通过事件拿到位置信息的 API</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".box"</span>).onmousedown = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e)</span><br><span class="line">    <span class="comment">//clientX: 128</span></span><br><span class="line">    <span class="comment">//clientY: 87</span></span><br><span class="line">    <span class="comment">//点击的点相对view视口原点的距离</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// offsetX: 108</span></span><br><span class="line">   <span class="comment">// offsetY: 67</span></span><br><span class="line">   <span class="comment">//点击的点相对自身原点的距离</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// pageX: 128</span></span><br><span class="line">   <span class="comment">// pageY: 87</span></span><br><span class="line">   <span class="comment">//点击的点相对document原点的距离</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// screenX: 348</span></span><br><span class="line">   <span class="comment">// screenY: 400</span></span><br><span class="line">   <span class="comment">//点击的点相对屏幕原点的距离</span></span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="拖动-dom"><a href="#拖动-dom" class="headerlink" title="拖动 dom"></a>拖动 dom</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".box"</span>).onmousedown = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(e)</span><br><span class="line">           e.stopPropagation();</span><br><span class="line">           <span class="keyword">let</span> X = e.offsetX,</span><br><span class="line">               Y = e.offsetY</span><br><span class="line">           <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">               e.target.style.left = e.pageX - X + <span class="string">"px"</span>;</span><br><span class="line">               e.target.style.top = e.pageY - Y + <span class="string">"px"</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="built_in">document</span>.onmousemove = <span class="literal">null</span></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="通过拖动改变-dom-宽度"><a href="#通过拖动改变-dom-宽度" class="headerlink" title="通过拖动改变 dom 宽度"></a>通过拖动改变 dom 宽度</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".left"</span>).onmousedown = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">       e.preventDefault();</span><br><span class="line">       e.stopPropagation();</span><br><span class="line">       <span class="keyword">let</span> originX = e.pageX,</span><br><span class="line">           width = $(<span class="string">".box"</span>).offsetWidth;</span><br><span class="line">       <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">           $(<span class="string">".box"</span>).style.width = width + e.pageX - originX + <span class="string">"px"</span></span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       <span class="built_in">document</span>.onmousemove = <span class="literal">null</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="通过拖动改变-dom-宽度和高度"><a href="#通过拖动改变-dom-宽度和高度" class="headerlink" title="通过拖动改变 dom 宽度和高度"></a>通过拖动改变 dom 宽度和高度</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".rightBottom"</span>).onmousedown = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">           <span class="comment">//阻止冒泡</span></span><br><span class="line">           e.stopPropagation();</span><br><span class="line">           <span class="comment">//取消默认事件</span></span><br><span class="line">           e.preventDefault();</span><br><span class="line">           <span class="comment">//按下时获取到当前点击的原点</span></span><br><span class="line">           <span class="keyword">let</span> originX = e.pageX,</span><br><span class="line">               originY = e.pageY,</span><br><span class="line">               <span class="comment">//按下时获取到当前元素的宽度和高度</span></span><br><span class="line">               width = $(<span class="string">".box"</span>).offsetWidth,</span><br><span class="line">               height = $(<span class="string">".box"</span>).offsetHeight;</span><br><span class="line">           <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">               <span class="comment">//e.pageX - originX</span></span><br><span class="line">               <span class="comment">// 移动时鼠标的距离原点的距离减去按下时原点的距离==要加的宽度或要减得宽度</span></span><br><span class="line">               $(<span class="string">".box"</span>).style.width = width + e.pageX - originX + <span class="string">"px"</span>;</span><br><span class="line">               $(<span class="string">".box"</span>).style.height = height + e.pageY - originY + <span class="string">"px"</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="comment">//抬起取消移动事件</span></span><br><span class="line">           <span class="built_in">document</span>.onmousemove = <span class="literal">null</span></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="元素距离的一些获取方式"><a href="#元素距离的一些获取方式" class="headerlink" title="元素距离的一些获取方式"></a>元素距离的一些获取方式</h2><ul><li>$(“.box”).clientWidth;</li><li>$(“.box”).clientHeight;</li><li>$(“.box”).offsetWidth   （包含边线的宽）</li><li>$(“.box”).offsetHeight （包含边线的高）;</li><li>$(“.box”).offsetLeft (dom 元素距离定位元素的 left 父元素没有定位层层向上直到 document)</li><li>$(“.box”).offsetTop (dom 元素距离定位元素的 Top 父元素没有定位层层向上直到 document)</li><li>$(“.box”) 正文全文宽：  $(“.box”).scrollWidth;（含滚动条时，即滚动条从最顶端滚到最底端实际走过的距离）</li><li>$(“.box”) 正文全文高：  $(“.box”).scrollHeight;（含滚动条时，即滚动条从最顶端滚到最底端实际走过的距离）</li><li>$(“.box”) 被卷去的高：  $(“.box”).scrollTop;</li><li>$(“.box”) 被卷去的左：  $(“.box”).scrollLeft;</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;关于一些拖动的小-demo&quot;&gt;&lt;a href=&quot;#关于一些拖动的小-demo&quot; class=&quot;headerlink&quot; title=&quot;关于一些拖动的小 demo&quot;&gt;&lt;/a&gt;关于一些拖动的小 demo&lt;/h1&gt;&lt;h2 id=&quot;demo&quot;&gt;&lt;a href=&quot;#demo&quot;
      
    
    </summary>
    
    
      <category term="dom" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/dom/"/>
    
      <category term="position" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/position/"/>
    
  </entry>
  
  <entry>
    <title>react对象控制台输出 null 的问题</title>
    <link href="git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/20/react%E5%90%88%E6%88%90%E4%BA%8B%E4%BB%B6%E5%AF%B9%E8%B1%A1%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BAnull%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>git@github.com:wangjinshen/wangjinshen.github.io.git/2019/01/20/react合成事件对象控制台输出null的问题/</id>
    <published>2019-01-20T11:24:35.000Z</published>
    <updated>2019-01-20T12:09:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="react-中-event-对象控制台输出-null-的问题"><a href="#react-中-event-对象控制台输出-null-的问题" class="headerlink" title="react 中 event 对象控制台输出 null 的问题"></a>react 中 event 对象控制台输出 null 的问题</h1><h2 id="在-react-中输出-event-对象，在控制台查看是-null"><a href="#在-react-中输出-event-对象，在控制台查看是-null" class="headerlink" title="在 react 中输出 event 对象，在控制台查看是 null"></a>在 react 中输出 event 对象，在控制台查看是 null</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/reactEvent.png" alt="null" title="">                </div>                <div class="image-caption">null</div>            </figure><h2 id="解决的办法很简单，在-console-log-event-前使用-event-的-persist-方法即可。"><a href="#解决的办法很简单，在-console-log-event-前使用-event-的-persist-方法即可。" class="headerlink" title="解决的办法很简单，在 console.log(event) 前使用 event 的 persist() 方法即可。"></a>解决的办法很简单，在 console.log(event) 前使用 event 的 persist() 方法即可。</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onClick</span>=<span class="string">&#123;</span></span></span></span><br><span class="line"><span class="xml">      (e)=&gt;&#123;</span></span><br><span class="line"><span class="xml">        e.persist()</span></span><br><span class="line"><span class="xml">        console.log(e)</span></span><br><span class="line"><span class="xml">      &#125;</span></span><br><span class="line"><span class="xml">    &#125;&gt;</span></span><br><span class="line"><span class="xml">    点击</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/reactResEvent.png" alt="结果" title="">                </div>                <div class="image-caption">结果</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;react-中-event-对象控制台输出-null-的问题&quot;&gt;&lt;a href=&quot;#react-中-event-对象控制台输出-null-的问题&quot; class=&quot;headerlink&quot; title=&quot;react 中 event 对象控制台输出 null 的问题&quot;&gt;
      
    
    </summary>
    
    
      <category term="react" scheme="git@github.com:wangjinshen/wangjinshen.github.io.git/tags/react/"/>
    
  </entry>
  
</feed>
