<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>阿王</title>
  
  <subtitle>做一个爱折腾的程序员</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-16T13:00:03.199Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>王瑾深</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>action</title>
    <link href="http://yoursite.com/2019/01/16/action/"/>
    <id>http://yoursite.com/2019/01/16/action/</id>
    <published>2019-01-16T12:57:34.000Z</published>
    <updated>2019-01-16T13:00:03.199Z</updated>
    
    <content type="html"><![CDATA[<h1 id="wepy-redux"><a href="#wepy-redux" class="headerlink" title="wepy-redux"></a>wepy-redux</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install redux redux-actions redux-promise wepy-redux --save</span><br></pre></td></tr></table></figure><h2 id="创建-store"><a href="#创建-store" class="headerlink" title="创建 store"></a>创建 store</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore, applyMiddleware &#125; <span class="keyword">from</span> <span class="string">"redux"</span>;</span><br><span class="line"><span class="keyword">import</span> Reducers <span class="keyword">from</span> <span class="string">"./reducer"</span>;</span><br><span class="line"><span class="keyword">import</span> promiseMiddleware <span class="keyword">from</span> <span class="string">"redux-promise"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写法一：</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">configStore</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> createStore(Reducers, applyMiddleware(promiseMiddleware))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//写法二</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> createStore(Reducers, applyMiddleware(promiseMiddleware))</span><br></pre></td></tr></table></figure><h2 id="创建-reducer"><a href="#创建-reducer" class="headerlink" title="创建 reducer"></a>创建 reducer</h2><p><strong>rank.js</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> defaultState = &#123;</span><br><span class="line">  rankList: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> rankReducer = <span class="function">(<span class="params">state = defaultState, action</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; type, payload &#125; = action;</span><br><span class="line">  <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">"UPDATE"</span>:</span><br><span class="line">      <span class="keyword">return</span> &#123; ...state, <span class="attr">rankList</span>: payload &#125;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">return</span> state;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> rankReducer;</span><br></pre></td></tr></table></figure></p><p><strong>index.js</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; combineReducers &#125; <span class="keyword">from</span> <span class="string">"redux"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rankReducer <span class="keyword">from</span> <span class="string">"./rank"</span>;</span><br><span class="line"><span class="keyword">import</span> topListReducer <span class="keyword">from</span> <span class="string">"./toplist"</span>;</span><br><span class="line"><span class="keyword">import</span> searchReducer <span class="keyword">from</span> <span class="string">"./search"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Reducers = combineReducers(&#123;</span><br><span class="line">  rankReducer,</span><br><span class="line">  topListReducer,</span><br><span class="line">  searchReducer,</span><br><span class="line">  ...</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Reducers;</span><br></pre></td></tr></table></figure></p><h2 id="创建-action"><a href="#创建-action" class="headerlink" title="创建 action"></a>创建 action</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; RNAK_UPDATE &#125; <span class="keyword">from</span> <span class="string">"../type/rank"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createAction &#125; <span class="keyword">from</span> <span class="string">"redux-actions"</span>;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">"@/utils/request"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式一:</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params">payload</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    type: RNAK_UPDATE,</span><br><span class="line">    payload</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式二：</span></span><br><span class="line"><span class="keyword">const</span> getJson = <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> result = <span class="keyword">await</span> axios.get(url);</span><br><span class="line">  <span class="keyword">return</span> result.data.data.slider;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> update = createAction(RNAK_UPDATE, () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="string">"https://c.y.qq.com/musichall/fcgi-bin/fcg_yqqhomepagerecommend.fcg"</span>;</span><br><span class="line">  <span class="keyword">return</span> getJson(url);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="创建-type"><a href="#创建-type" class="headerlink" title="创建 type"></a>创建 type</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> RNAK_UPDATE = <span class="string">"UPDATE"</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> TOPLIST_UPDATE = <span class="string">"UPDATE"</span>;</span><br></pre></td></tr></table></figure><h2 id="绑定及监听"><a href="#绑定及监听" class="headerlink" title="绑定及监听"></a>绑定及监听</h2><p>在app.wepy文件中，添加下面代码：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; setStore &#125; <span class="keyword">from</span> <span class="string">'wepy-redux'</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store'</span></span><br><span class="line">setStore(store)</span><br></pre></td></tr></table></figure></p><p>setStore()是用来将仓库中的数据绑定到页面中</p><p>类似react-redux中的 <code>&lt;Provider store={store}&gt;&lt;/Provider&gt;组件</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;wepy-redux&quot;&gt;&lt;a href=&quot;#wepy-redux&quot; class=&quot;headerlink&quot; title=&quot;wepy-redux&quot;&gt;&lt;/a&gt;wepy-redux&lt;/h1&gt;&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
      <category term="redux" scheme="http://yoursite.com/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>react-component-父子通讯</title>
    <link href="http://yoursite.com/2019/01/16/react-component-%E7%88%B6%E5%AD%90%E9%80%9A%E8%AE%AF/"/>
    <id>http://yoursite.com/2019/01/16/react-component-父子通讯/</id>
    <published>2019-01-16T10:13:12.000Z</published>
    <updated>2019-01-16T12:53:52.914Z</updated>
    
    <content type="html"><![CDATA[<h1 id="组件通讯"><a href="#组件通讯" class="headerlink" title="组件通讯"></a>组件通讯</h1><h2 id="父子通讯"><a href="#父子通讯" class="headerlink" title="父子通讯"></a>父子通讯</h2><p>父级组件调用子组件，通过props来传递参数，子组件通过this.props来接收</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Children</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">render()&#123;</span><br><span class="line"><span class="keyword">const</span> &#123; datalist &#125; = <span class="keyword">this</span>.props;</span><br><span class="line"><span class="keyword">return</span> &lt;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">render()&#123;</span><br><span class="line"><span class="keyword">const</span> &#123; datalist &#125; = [];</span><br><span class="line"><span class="keyword">return</span> &lt;div&gt;</span><br><span class="line">&lt;Children datalist=&#123;datalist&#125;&gt;&lt;/Children&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="子父通讯"><a href="#子父通讯" class="headerlink" title="子父通讯"></a>子父通讯</h2><p>父级组件通过props给子组件传递一个回调函数，子级组件调用父级传递过来的回调，将参数返回<br><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Children</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">componentDidMount()&#123;</span><br><span class="line"><span class="keyword">const</span> &#123; getData &#125; = <span class="keyword">this</span>.props;</span><br><span class="line">getData([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line">&#125;</span><br><span class="line">render()&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &lt;div&gt;</span><br><span class="line">this is children</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">getData(val)&#123;</span><br><span class="line"><span class="comment">//[1,2,3,4,5]</span></span><br><span class="line"><span class="built_in">console</span>.log(val)</span><br><span class="line">&#125;</span><br><span class="line">render()&#123;</span><br><span class="line"><span class="keyword">return</span> &lt;div&gt;</span><br><span class="line">&lt;Children getData=&#123;this.getData&#125;&gt;&lt;/Children&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="同级通讯"><a href="#同级通讯" class="headerlink" title="同级通讯"></a>同级通讯</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save events</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> EventEmitter = <span class="built_in">require</span>(<span class="string">'events'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> EventBus = <span class="keyword">new</span> EventEmitter()</span><br><span class="line"><span class="comment">//事件订阅</span></span><br><span class="line">EventBus.on(<span class="string">"message"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">text</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(text)  <span class="comment">//hello world</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//事件发布</span></span><br><span class="line">EventBus.emit(<span class="string">"message"</span>, <span class="string">'hello world'</span>)</span><br></pre></td></tr></table></figure><h2 id="跨级通讯"><a href="#跨级通讯" class="headerlink" title="跨级通讯"></a>跨级通讯</h2><p><strong>案例描述</strong>:</p><p>当前有三个组件，包裹顺序依次是： Parent &gt; Middle &gt; Children<br>现在 Parent组件有数据要传递给 Children组件</p><ul><li><p>Parent &gt; Middle &gt; Children<br>具体方案请参考 props 传参</p></li><li><p>Parent &gt; Children<br>具体方案如下，通context对象完成数据传递：</p></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> PropTypes <span class="keyword">from</span> <span class="string">"prop-types"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子级</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Children</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> contextTypes = &#123;</span><br><span class="line">propA: PropTypes.string</span><br><span class="line">methodA: PropTypes.func</span><br><span class="line">&#125;</span><br><span class="line">render()&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &lt;div&gt;</span><br><span class="line">this is children: &#123;this.context.propA&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 中间</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Middle</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render () &#123;</span><br><span class="line">    <span class="keyword">return</span> &lt;Children /&gt;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">// 父级</span><br><span class="line">class Parent extends React.Component&#123;</span><br><span class="line">// 声明Context对象属性</span><br><span class="line">static childContextTypes = &#123;</span><br><span class="line">propA: PropTypes.string,</span><br><span class="line">methodA: PropTypes.func</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 返回Context对象，方法名是约定好的</span><br><span class="line">getChildContext () &#123;</span><br><span class="line">return &#123;</span><br><span class="line">  propA: 'propA',</span><br><span class="line">  methodA: () =&gt; 'methodA'</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">render()&#123;</span><br><span class="line">return &lt;div&gt;</span><br><span class="line">&lt;Middle/&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="redux"><a href="#redux" class="headerlink" title="redux"></a>redux</h2><p>全局状态的管理库，详情请看<a href="../redux/README.md">redux指南</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;组件通讯&quot;&gt;&lt;a href=&quot;#组件通讯&quot; class=&quot;headerlink&quot; title=&quot;组件通讯&quot;&gt;&lt;/a&gt;组件通讯&lt;/h1&gt;&lt;h2 id=&quot;父子通讯&quot;&gt;&lt;a href=&quot;#父子通讯&quot; class=&quot;headerlink&quot; title=&quot;父子通讯&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>react</title>
    <link href="http://yoursite.com/2019/01/15/react/"/>
    <id>http://yoursite.com/2019/01/15/react/</id>
    <published>2019-01-15T15:37:25.000Z</published>
    <updated>2019-01-15T15:37:36.189Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>测试  Holle world</title>
    <link href="http://yoursite.com/2019/01/15/%E6%B5%8B%E8%AF%95-Holle-world/"/>
    <id>http://yoursite.com/2019/01/15/测试-Holle-world/</id>
    <published>2019-01-15T11:30:49.000Z</published>
    <updated>2019-01-16T00:20:07.491Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="tags" scheme="http://yoursite.com/tags/tags/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/01/15/hello-world/"/>
    <id>http://yoursite.com/2019/01/15/hello-world/</id>
    <published>2019-01-15T11:16:02.854Z</published>
    <updated>2019-01-16T06:47:52.083Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="bolg" scheme="http://yoursite.com/tags/bolg/"/>
    
  </entry>
  
</feed>
